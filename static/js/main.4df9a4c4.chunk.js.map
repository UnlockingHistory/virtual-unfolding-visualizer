{"version":3,"sources":["assets sync /^/.//.*$","assets/DB-1538_58x58x58_GX.tom","assets/DB-1538_58x58x58_GXX.tom","assets/DB-1538_58x58x58_GXX_3X.tom","assets/DB-1538_58x58x58_GXY.tom","assets/DB-1538_58x58x58_GXY_3X.tom","assets/DB-1538_58x58x58_GXZ.tom","assets/DB-1538_58x58x58_GXZ_3X.tom","assets/DB-1538_58x58x58_GX_3X.tom","assets/DB-1538_58x58x58_GY.tom","assets/DB-1538_58x58x58_GYY.tom","assets/DB-1538_58x58x58_GYY_3X.tom","assets/DB-1538_58x58x58_GYZ.tom","assets/DB-1538_58x58x58_GYZ_3X.tom","assets/DB-1538_58x58x58_GY_3X.tom","assets/DB-1538_58x58x58_GZ.tom","assets/DB-1538_58x58x58_GZZ.tom","assets/DB-1538_58x58x58_GZZ_3X.tom","assets/DB-1538_58x58x58_GZ_3X.tom","assets/DB-1538_58x58x58_allIndices.tom","assets/DB-1538_58x58x58_allNormalsList.bin","assets/DB-1538_58x58x58_allPoints.tom","assets/DB-1538_58x58x58_allPointsList.bin","assets/DB-1538_58x58x58_allWidthsMax.tom","assets/DB-1538_58x58x58_allWidthsMin.tom","assets/DB-1538_58x58x58_blurred.tom","assets/DB-1538_58x58x58_clipped.tom","assets/DB-1538_58x58x58_indices.tom","assets/DB-1538_58x58x58_indices_FLAGGED.tom","assets/DB-1538_58x58x58_meshNeighborsList.bin","assets/DB-1538_58x58x58_meshNumbersList.bin","assets/DB-1538_58x58x58_normals.tom","assets/DB-1538_58x58x58_normalsList.bin","assets/DB-1538_58x58x58_normalsList_FLAGGED.bin","assets/DB-1538_58x58x58_normalsRelaxed.tom","assets/DB-1538_58x58x58_points3DList.bin","assets/DB-1538_58x58x58_points3DList_FLAGGED.bin","assets/DB-1538_58x58x58_raw.tom","assets/DB-1538_58x58x58_responses.tom","assets/DB-1538_58x58x58_responsesRelaxed.tom","assets/DB-1538_58x58x58_widthsMaxList.bin","assets/DB-1538_58x58x58_widthsMaxList_FLAGGED.bin","assets/DB-1538_58x58x58_widthsMinList.bin","assets/DB-1538_58x58x58_widthsMinList_FLAGGED.bin","shared/types.ts","state/AppState.ts","state/SelectionState.ts","state/SectionState.ts","shared/utils.ts","state/DataState.ts","shared/constants.ts","io/io.ts","io/BufferedTomSelection.ts","io/BufferedSelection.ts","state/LocalFiles.ts","UI/FileHandler.tsx","UI/Nav.tsx","UI/FileMenu.tsx","3D/ScalarFieldSection.tsx","state/ThreeState.ts","3D/Controls.tsx","3D/VectorFieldSection.tsx","3D/BinSelection.tsx","3D/View3D.tsx","UI/ControlPanel.tsx","UI/OrbitControls.tsx","UI/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Axis","currentTabState","atom","key","default","visibleScalarTomFilenameState","visibleVectorTomFilenamesState","visibleBinFilenamesState","selectionBoundsState","min","max","selectionSizeState","selector","get","selectionBounds","selectionCenterState","selectionSize","sectionPositionState","sectionAxisState","Z","sectionSizeState","sectionAxis","size","slice","sectionCenterState","selectionCenter","sectionPosition","center","isInteger","num","Number","isPositiveInteger","isNonNegativeInteger","stringifyVector3","vector3","x","y","z","getExtension","filenameWithExtension","parts","split","length","bufferedSelections","tomFilenameFilter","filename","binFilenameFilter","scalarTypesFilter","isScalarType","vectorTypesFilter","isVectorType","vector1TypesFilter","isVector1Type","vector3TypesFilter","isVector3Type","filenamesState","tomFilenamesState","filter","binFilenamesState","scalarTomFilenamesState","vectorTomFilenamesState","vector3TomFilenamesState","vector1TomFilenamesState","TOM_NUM_ELEMENTS_NUM_BYTES","TOM_USE_NULL_START_POSITION","TOM_DATA_TYPE_START_POSITION","TOM_USE_NULL_NUM_BYTES","readTom","file","a","getTomDataType","type","readData","typedArray","Promise","all","getTomDimensions","getTomNumElements","dimensions","numElements","name","utils","data","dim","Vector3","readString","constants","getTomUseNull","useNull","replace","start","readFileToBuffer","buffer","Uint8Array","Uint16Array","Uint32Array","Int32Array","Float32Array","startPosition","reader","FileReader","reject","onerror","abort","DOMException","onload","result","blob","undefined","readAsText","readAsArrayBuffer","makeBufferedTomSelectionFromFile","io","BufferedTomScalarSelection","BufferedTomVectorSelection","BufferedTomSelection","layer","layerNeedsUpdate","layerNum","axis","LAYER_LENGTH","calcLayerLength","this","toArray","colorsNeedsUpdate","setAxis","setLayerNum","i","nullVal","geometryNeedsUpdate","__visualStyle","__pointDataFilename","__vectorDataFilename","__vectorOffsetFilename","__vectorScaleFilename","__colorMode","__colorZeroCentered","__colorHex","__colorDataFilename","positions","count","vertexColors","nullValForType","Infinity","val","Math","pointDataFilename","vectorDataFilename","vectorOffsetFilename","vectorScaleFilename","colorMode","colorZeroCentered","colorHex","colorDataFilename","rgbTexture","constructor","visualStyle","getLayerData","setColorMode","setColorZeroCentered","amplitude","abs","range","color","Color","scaledVal","setHSL","round","r","g","b","toLowerCase","vector3Filenames","randomColor","includes","find","positionsDataLengthForVisualStyle","setVisualStyle","setPointDataFilename","setVectorDataFilename","setVectorOffsetFilename","setColorHex","setColorDataFilename","dependencies","pointData","vectorData","vectorOffset","vectorScale","colorDataSelection","colorData","X_LENGTH","X","Y_LENGTH","Y","Z_LENGTH","colorInt","parseInt","substr","isNaN","setHex","setRGB","scale","filenames","URLS","require","localFiles","url","fetch","then","files","forEach","localFilesLoaded","FileHandler","setSelectionBounds","useSetRecoilState","setSectionPosition","useRecoilValue","setFilenames","parseFiles","dispose","tomFileObjects","bufferedTomSelections","values","selection","updateAtomDefaultsAfterDataLoaded","floor","fileList","target","Array","from","useEffect","loadLocalFiles","document","getElementById","onchange","className","icon","text","onClick","input","click","Nav","useRecoilState","tabState","setTabState","align","Alignment","LEFT","animate","large","onChange","newTabId","selectedTabId","title","disabled","Group","RIGHT","DataFile","props","bufferedSelection","getAtom","setAtom","vector1Filenames","updatePointDataFilename","_pointDataFilename","value","showData","toggleVisiblity","filenameLiClasses","classNames","Classes","MENU_ITEM","expanded","isExpanded","href","stopPropagation","expandFile","isVisible","ALIGN_RIGHT","isOpen","keepChildrenMounted","toString","_visualStyle","selectedValue","label","_vectorDataFilename","_vectorOffsetFilename","_vectorScaleFilename","_colorMode","onKeyUp","_colorHex","defaultValue","_colorDataFilename","checked","_colorZeroCentered","DataFileGroup","useState","setIsExpanded","currentExpandedFile","setCurrentExpandedFile","DISABLED","visibleFilenames","indexOf","ScalarTomFileGroup","scalarTomFilenames","visibleScalarTomFilename","setVisibleScalarTomFilename","VectorTomFileGroup","vectorTomFilenames","visibleVectorTomFilenames","setVisibleVectorTomFilenames","nextState","splice","push","BinFileGroup","binFilenames","visibleBinFilenames","setVisibleBinFilenames","FileMenu","ELEVATION_0","position","BufferAttribute","uv","index","ScalarFieldSectionMesh","sectionSize","sectionCenter","visibleScalarDataFilename","bufferedTomSelection","layerData","getLayerTexture","dataTexture","useUpdate","image","needsUpdate","attach","attributes-position","attributes-uv","depthWrite","ref","image-width","image-height","format","RGBFormat","UnsignedByteType","ScalarFieldSection","threeState","controls","Controls","useThree","camera","domElement","gl","invalidate","update","current","addEventListener","removeEventListener","args","target-x","target-y","target-z","zoomSpeed","rotateSpeed","VectorFieldSection","getLayerPositions","positionAttribute","colorAttribute","attachObject","array","itemSize","depthTest","VectorFieldSections","r_visibleVector3DDataFilenames","BinSection","bufferedBinSelection","edges","edgeCount","indexAttribute","BinSections","r_visibleBinFilenames","extend","OrbitControls","View3D","useContext","AppContext","colorManagement","orthographic","zoom","up","near","far","pixelRatio","window","devicePixelRatio","invalidateFrameloop","Provider","ControlPanel","setCrossSectionPosition","stepSize","labelStepSize","vertical","showTrackFill","reset","FocusStyleManager","onlyShowFocusOnTabs","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4df9a4c4.chunk.js","sourcesContent":["var map = {\n\t\"./DB-1538_58x58x58_GX.tom\": 162,\n\t\"./DB-1538_58x58x58_GXX.tom\": 163,\n\t\"./DB-1538_58x58x58_GXX_3X.tom\": 164,\n\t\"./DB-1538_58x58x58_GXY.tom\": 165,\n\t\"./DB-1538_58x58x58_GXY_3X.tom\": 166,\n\t\"./DB-1538_58x58x58_GXZ.tom\": 167,\n\t\"./DB-1538_58x58x58_GXZ_3X.tom\": 168,\n\t\"./DB-1538_58x58x58_GX_3X.tom\": 169,\n\t\"./DB-1538_58x58x58_GY.tom\": 170,\n\t\"./DB-1538_58x58x58_GYY.tom\": 171,\n\t\"./DB-1538_58x58x58_GYY_3X.tom\": 172,\n\t\"./DB-1538_58x58x58_GYZ.tom\": 173,\n\t\"./DB-1538_58x58x58_GYZ_3X.tom\": 174,\n\t\"./DB-1538_58x58x58_GY_3X.tom\": 175,\n\t\"./DB-1538_58x58x58_GZ.tom\": 176,\n\t\"./DB-1538_58x58x58_GZZ.tom\": 177,\n\t\"./DB-1538_58x58x58_GZZ_3X.tom\": 178,\n\t\"./DB-1538_58x58x58_GZ_3X.tom\": 179,\n\t\"./DB-1538_58x58x58_allIndices.tom\": 180,\n\t\"./DB-1538_58x58x58_allNormalsList.bin\": 181,\n\t\"./DB-1538_58x58x58_allPoints.tom\": 182,\n\t\"./DB-1538_58x58x58_allPointsList.bin\": 183,\n\t\"./DB-1538_58x58x58_allWidthsMax.tom\": 184,\n\t\"./DB-1538_58x58x58_allWidthsMin.tom\": 185,\n\t\"./DB-1538_58x58x58_blurred.tom\": 186,\n\t\"./DB-1538_58x58x58_clipped.tom\": 187,\n\t\"./DB-1538_58x58x58_indices.tom\": 188,\n\t\"./DB-1538_58x58x58_indices_FLAGGED.tom\": 189,\n\t\"./DB-1538_58x58x58_meshNeighborsList.bin\": 190,\n\t\"./DB-1538_58x58x58_meshNumbersList.bin\": 191,\n\t\"./DB-1538_58x58x58_normals.tom\": 192,\n\t\"./DB-1538_58x58x58_normalsList.bin\": 193,\n\t\"./DB-1538_58x58x58_normalsList_FLAGGED.bin\": 194,\n\t\"./DB-1538_58x58x58_normalsRelaxed.tom\": 195,\n\t\"./DB-1538_58x58x58_points3DList.bin\": 196,\n\t\"./DB-1538_58x58x58_points3DList_FLAGGED.bin\": 197,\n\t\"./DB-1538_58x58x58_raw.tom\": 198,\n\t\"./DB-1538_58x58x58_responses.tom\": 199,\n\t\"./DB-1538_58x58x58_responsesRelaxed.tom\": 200,\n\t\"./DB-1538_58x58x58_widthsMaxList.bin\": 201,\n\t\"./DB-1538_58x58x58_widthsMaxList_FLAGGED.bin\": 202,\n\t\"./DB-1538_58x58x58_widthsMinList.bin\": 203,\n\t\"./DB-1538_58x58x58_widthsMinList_FLAGGED.bin\": 204\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 161;","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GX.c9275395.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GXX.d14a19bb.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GXX_3X.a183c4f7.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GXY.75ebb749.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GXY_3X.7a0eae41.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GXZ.897750f0.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GXZ_3X.890f2b9d.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GX_3X.5c3a19d4.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GY.642eccff.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GYY.17e54997.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GYY_3X.1af9eef5.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GYZ.d1f3a413.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GYZ_3X.d7b4f93b.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GY_3X.9eb54991.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GZ.f09797de.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GZZ.9363dbbd.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GZZ_3X.013071da.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_GZ_3X.b47ec805.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_allIndices.050de0bc.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_allNormalsList.e3e81c3b.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_allPoints.2b912915.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_allPointsList.c9c90b9d.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_allWidthsMax.61f5e770.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_allWidthsMin.3b49f9f2.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_blurred.5faab082.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_clipped.7e1852e1.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_indices.b103d0a4.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_indices_FLAGGED.71633992.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_meshNeighborsList.0755bafa.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_meshNumbersList.4aea1657.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_normals.bea746a9.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_normalsList.ca3d83ec.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_normalsList_FLAGGED.608a3375.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_normalsRelaxed.462cefc8.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_points3DList.7d9376d3.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_points3DList_FLAGGED.7fc46db0.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_raw.32064204.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_responses.db6ae242.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_responsesRelaxed.a8b69ac5.tom\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_widthsMaxList.cb2853bf.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_widthsMaxList_FLAGGED.b91d4983.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_widthsMinList.f3b53210.bin\";","module.exports = __webpack_public_path__ + \"static/media/DB-1538_58x58x58_widthsMinList_FLAGGED.ef2d5919.bin\";","import { BufferedBinSelection } from '../io/BufferedBinSelection';\nimport { BufferedTomScalarSelection, BufferedTomVectorSelection } from '../io/BufferedTomSelection';\n\n// Valid types for Tom files.\nexport type TomType = 'uint8' | 'float32' | 'uint32' | 'int32';\nexport type TomTypedArray = Uint8Array | Float32Array | Uint32Array | Int32Array;\n// These are the types currently in use in the app.\nexport type Type = 'uint8' | 'float32' | 'uint32' | 'int32' | 'int16' | 'uint16';\nexport type TypedArray = Uint8Array | Float32Array | Uint32Array | Int32Array | Int16Array | Uint16Array;\n\n// export namespace Axis {\n// \texport const X = 0;\n// \texport type X = typeof X;\n// \texport const Y = 1;\n// \texport type Y = typeof Y;\n// \texport const Z = 2;\n// \texport type Z = typeof Z;\n//   }\n// export type Axis = typeof Axis[keyof typeof Axis];\n\nexport enum Axis {\n\tX = 0,\n\tY = 1,\n\tZ = 2,\n}\n\nexport type ColorMode = 'hex' | 'greyscale' | 'spectral';\nexport type VisualStyleType = 'scalarField' | 'vector' | 'point' | 'mesh';\n\nexport type SelectionAtom = {\n\tfilename: string,\n\tvisualStyle: VisualStyleType,\n\tpointDataFilename?: string,\n\tvectorDataFilename?: string,\n\tvectorOffsetFilename?: string,\n\tvectorScaleFilename?: string,\n\tcolorMode: ColorMode,\n\tcolorHex?: string,\n\tcolorZeroCentered: boolean,\n\tcolorDataFilename?: string,\n};\n\nexport type BufferedSelection = BufferedBinSelection | BufferedTomScalarSelection | BufferedTomVectorSelection;\n\n","import { atom } from 'recoil';\n\nexport type TabState = '3D' | '2D';\n\nexport const currentTabState = atom<TabState>({\n\tkey: 'currentTab',\n\tdefault: '3D',\n});\n\n// Only one scalar data section can be visible at a time.\nexport const visibleScalarTomFilenameState = atom<string | null>({\n\tkey: 'visibleScalarTomFilename',\n\tdefault: null,\n});\n\n// Many vector sections can be visible at the same time.\nexport const visibleVectorTomFilenamesState = atom<string[]>({\n\tkey: 'visibleVectorTomFilenames',\n\tdefault: [],\n});\n\n// Many bin files can be visible at the same time.\nexport const visibleBinFilenamesState = atom<string[]>({\n\tkey: 'visibleBinFilenames',\n\tdefault: [],\n});\n\n\n// // export const visibleScalarDataFilename = selector<string | undefined>({\n// // \tkey: 'visibleScalarDataFileName',\n// // \tget: ({ get }) => {\n// // \t\tconst r_loadedScalarDataFilenames = get(loadedScalarDataFilenames);\n// // \t\tconst r__visibleScalarDataFilename = get(_visibleScalarDataFilename);\n// // \t\treturn r__visibleScalarDataFilename && r_loadedScalarDataFilenames.indexOf(r__visibleScalarDataFilename) >= 0 ?\n// // \t\t\t r__visibleScalarDataFilename : r_loadedScalarDataFilenames[0];\n// // \t},\n// // \tset: ({ set }, newValue) => {\n// // \t\tconsole.log(\"here\", newValue);\n// // \t\tset(_visibleScalarDataFilename, newValue);\n// // \t},\n// // });\n// const defaultScalarDataAtom = atom<TomScalarSelectionAtom>({\n// \tkey: 'default_file_atom',\n// \tdefault: {\n// \t\tfilename: '',\n// \t\tcolorMode: 'greyscale' as ScalarDataColorMode,\n// \t\tzeroCentered: false,\n// \t},\n// });\n// export const visibleScalarDataAtom = selector({\n// \tkey: 'visibleScalarDataAtom',\n// \tget: ({ get }) => {\n// \t\tconst r_visibleScalarDataFilename = get(visibleScalarDataFilename);\n// \t\tif (r_visibleScalarDataFilename) {\n// \t\t\treturn (tomFiles[r_visibleScalarDataFilename] as BufferedTomScalarSelection).getAtom();\n// \t\t}\n// \t\treturn defaultScalarDataAtom;\n// \t},\n// });\n","import { atom, selector } from 'recoil';\n\n// Bounds of a 3D selection within the data.\nexport const selectionBoundsState = atom({\n\tkey: 'selectionBounds',\n\tdefault: {\n\t\tmin: [0, 0, 0],\n\t\tmax: [0, 0, 0],\n\t},\n});\n\n// Compute the size of the selection.\nexport const selectionSizeState = selector<[number, number, number]>({\n\tkey: 'selectionSize',\n\tget: ({ get }) => {\n\t\tconst selectionBounds = get(selectionBoundsState);\n\t\treturn [\n\t\t\tselectionBounds.max[0] - selectionBounds.min[0],\n\t\t\tselectionBounds.max[1] - selectionBounds.min[1],\n\t\t\tselectionBounds.max[2] - selectionBounds.min[2],\n\t\t];\n\t},\n});\n\n// Compute the center of the selection.\nexport const selectionCenterState = selector<[number, number, number]>({\n\tkey: 'selectionCenter',\n\tget: ({ get }) => {\n\t\tconst selectionSize = get(selectionSizeState);\n\t\treturn [\n\t\t\tselectionSize[0]/2,\n\t\t\tselectionSize[1]/2,\n\t\t\tselectionSize[2]/2,\n\t\t];\n\t},\n});","import { atom, selector } from 'recoil';\nimport { Axis } from '../shared/types';\nimport { selectionSizeState, selectionCenterState } from './SelectionState';\n\nexport const sectionPositionState = atom<number>({\n\tkey: \"sectionPosition\",\n\tdefault: 0,\n});\n\nexport const sectionAxisState = atom<Axis>({\n\tkey: \"sectionAxis\",\n\tdefault: Axis.Z,\n});\n\nexport const currentVisibleScalarSectionState = atom<string>({\n\tkey: \"currentVisibleSection\",\n\tdefault: 'raw',\n});\n\n// Compute the size of the cross section.\nexport const sectionSizeState = selector<[number, number, number]>({\n\tkey: 'sectionSize',\n\tget: ({ get }) => {\n\t\tconst selectionSize = get(selectionSizeState);\n\t\tconst sectionAxis = get(sectionAxisState);\n\t\tconst size = selectionSize.slice();\n\t\tsize[sectionAxis] = 1;\n\t\treturn size as [number, number, number];\n\t},\n});\n\n// Compute the center of the cross section.\nexport const sectionCenterState = selector<[number, number, number]>({\n\tkey: 'sectionCenter',\n\tget: ({ get }) => {\n\t\tconst selectionCenter = get(selectionCenterState);\n\t\tconst sectionAxis = get(sectionAxisState);\n\t\tconst sectionPosition = get(sectionPositionState);\n\t\tconst center = selectionCenter.slice();\n\t\tcenter[sectionAxis] = sectionPosition;\n\t\treturn center as [number, number, number];\n\t},\n});","import * as types from './types';\nimport { Vector3 } from 'three';\n\n/**\n * Tests if a number is an integer.\n * @param {number} num number to be tested\n * @returns {boolean} true if num is an integer, else false\n */\nfunction isInteger(num: number) {\n\treturn Number.isInteger(num);\n}\n\n/**\n * Tests if a number is a positive integer (strictly > 0).\n * @param {number} num number to be tested\n * @returns {boolean} true if num is a positive integer, else false\n */\nexport function isPositiveInteger(num: number) {\n\treturn isInteger(num) && num > 0;\n}\n\n/**\n * Tests if a number is a non-negative integer (>= 0).\n * @param {number} num number to be tested\n * @returns {boolean} true if num is a non-negative integer, else false\n */\nexport function isNonNegativeInteger(num: number) {\n\treturn isInteger(num) && num >= 0;\n}\n\n/**\n * Returns the number of bytes per element of a given data type.\n * @param {string} type string describing data type\n * @returns {number} number of bytes per element of type\n */\nexport function dataSizeForType(type: types.TomType) {\n\tswitch (type) {\n\t\tcase 'uint8':\n\t\t\treturn 1;\n\t\tcase 'int32':\n\t\t\treturn 4;\n\t\tcase 'uint32':\n\t\t\treturn 4;\n\t\tcase 'float32':\n\t\t\treturn 4;\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown type ${type}.`);\n\t}\n};\n\nexport function stringifyVector3(vector3: Vector3) {\n\treturn `[ ${vector3.x}, ${vector3.y}, ${vector3.z} ]`;\n};\n\nexport function typeOfTypedArray(typedArray: Float32Array | Uint8Array | Uint32Array | Int32Array): types.TomType;\nexport function typeOfTypedArray(typedArray: Float32Array | Uint8Array | Uint32Array | Int32Array | Uint16Array): types.TomType | 'uint16';\nexport function typeOfTypedArray(typedArray: any) {\n\t// Get data type from TypedArray.\n\tswitch (typedArray.constructor) {\n\t\tcase Uint8Array:\n\t\t\treturn 'uint8';\n\t\tcase Float32Array:\n\t\t\treturn 'float32';\n\t\tcase Int32Array:\n\t\t\treturn 'int32';\n\t\tcase Uint32Array:\n\t\t\treturn 'uint32';\n\t\tcase Uint16Array:\n\t\t\treturn 'uint16';\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown type for tom file:  ${typedArray.constructor}`)\n\t}\n}\n\n/**\n * Returns the number we are reserving as 'null' for a given data type.\n * @param {string} type string describing data type\n * @returns {number} null value for that data type\n */\nexport function nullValForType(type: types.TomType) {\n\tswitch (type) {\n\t\tcase 'uint8':\n\t\t    return 255;\n\t\tcase 'int32':\n\t\t\treturn -10000;\n\t\t// case 'uint32':\n\t\t//     return ;\n\t\tcase 'float32':\n\t\t\treturn -10000;\n\t\tdefault:\n\t\t\tthrow new Error(`No null supported for type ${type}.`);\n\t}\n};\n\n/**\n * Returns the file type extension of a filename.\n * @param {string} filenameWithExtension\n * @returns {string} extension, no period\n */\nexport function getExtension(filenameWithExtension: string) {\n\tconst parts = filenameWithExtension.split('.');\n\tif (parts.length < 2) {\n\t\tthrow new Error(`Invalid filename: ${filenameWithExtension}, or no extension present.`);\n\t}\n\treturn parts[parts.length - 1];\n};","import { atom, selector } from 'recoil';\nimport { BufferedSelection } from '../shared/types';\nimport { getExtension } from '../shared/utils';\n\n// Each bufferedSelection has its own atom.\nexport const bufferedSelections: { [key: string]: BufferedSelection } = {};\nconst tomFilenameFilter = (filename: string) => {\n\treturn getExtension(filename) === 'tom';\n}\nconst binFilenameFilter = (filename: string) => {\n\treturn getExtension(filename) === 'bin';\n}\nconst scalarTypesFilter = (filename: string) => {\n\treturn bufferedSelections[filename].isScalarType();\n}\nconst vectorTypesFilter = (filename: string) => {\n\treturn bufferedSelections[filename].isVectorType();\n}\nconst vector1TypesFilter = (filename: string) => {\n\treturn bufferedSelections[filename].isVector1Type();\n}\nconst vector3TypesFilter = (filename: string) => {\n\treturn bufferedSelections[filename].isVector3Type();\n}\n\nexport function getVector3TomFilenames() {\n\treturn Object.keys(bufferedSelections).filter(tomFilenameFilter).filter(vector3TypesFilter);\n}\n\nexport const filenamesState = atom<string[]>({\n\tkey: 'filenames',\n\tdefault: [],\n});\n\nconst tomFilenamesState = selector<string[]>({\n\tkey: 'tomFilenames',\n\tget: ({ get }) => {\n\t\tconst filenames = get(filenamesState);\n\t\treturn filenames.filter(tomFilenameFilter);\n\t}\n});\n\nexport const binFilenamesState = selector<string[]>({\n\tkey: 'binFilenames',\n\tget: ({ get }) => {\n\t\tconst filenames = get(filenamesState);\n\t\treturn filenames.filter(binFilenameFilter);\n\t}\n});\n\nexport const vector3BinFilenamesState = selector<string[]>({\n\tkey: 'vector3BinFilenames',\n\tget: ({ get }) => {\n\t\tconst binFilenames = get(binFilenamesState);\n\t\treturn binFilenames.filter(vector3TypesFilter);\n\t}\n});\n\nexport const scalarTomFilenamesState = selector<string[]>({\n\tkey: 'scalarTomFilenames',\n\tget: ({ get }) => {\n\t\tconst tomFilenames = get(tomFilenamesState);\n\t\treturn tomFilenames.filter(scalarTypesFilter);\n\t}\n});\n\nexport const vectorTomFilenamesState = selector<string[]>({\n\tkey: 'vectorTomFilenames',\n\tget: ({ get }) => {\n\t\tconst tomFilenames = get(tomFilenamesState);\n\t\treturn tomFilenames.filter(vectorTypesFilter);\n\t}\n});\n\nexport const vector3TomFilenamesState = selector<string[]>({\n\tkey: 'vector3TomFilenames',\n\tget: ({ get }) => {\n\t\tconst tomFilenames = get(tomFilenamesState);\n\t\treturn tomFilenames.filter(vector3TypesFilter);\n\t}\n});\n\nexport const vector1TomFilenamesState = selector<string[]>({\n\tkey: 'vector1TomFilenames',\n\tget: ({ get }) => {\n\t\tconst tomFilenames = get(tomFilenamesState);\n\t\treturn tomFilenames.filter(vector1TypesFilter);\n\t}\n});\n\n// Overall dimensions of the current file.\nexport const dimensionsState = atom({\n\tkey: 'dimensions',\n\tdefault: [0, 0, 0],\n});","// IO constants.\nexport const DATA_PATH = 'data/';\nexport const OUTPUT_PATH = 'output/';\nexport const TEMP_PATH = 'output/temp/';\nexport const TOM_HEADER_NUM_BYTES = 512;\nexport const TOM_DIMENSIONS_START_POSITION = 0;\nexport const TOM_DIMENSIONS_NUM_BYTES = 6;\nexport const TOM_DATA_TYPE_START_POSITION = 320;\nexport const TOM_DATA_TYPE_NUM_BYTES = 10;\nexport const TOM_NUM_ELEMENTS_MARKER = 'NumEl';\nexport const TOM_NUM_ELEMENTS_START_POSITION = TOM_DATA_TYPE_START_POSITION + TOM_DATA_TYPE_NUM_BYTES;\nexport const TOM_NUM_ELEMENTS_NUM_BYTES = TOM_NUM_ELEMENTS_MARKER.length + 1;\nexport const TOM_USE_NULL_MARKER = 'Null';\nexport const TOM_USE_NULL_START_POSITION = TOM_NUM_ELEMENTS_START_POSITION + TOM_NUM_ELEMENTS_NUM_BYTES;\nexport const TOM_USE_NULL_NUM_BYTES = TOM_USE_NULL_MARKER.length + 1;\nexport const BIN_HEADER_NUM_BYTES = 100;\nexport const BIN_DIMENSIONS_START_POSITION = 0;\nexport const BIN_DIMENSIONS_NUM_BYTES = 4;\nexport const BIN_DATA_TYPE_START_POSITION = BIN_DIMENSIONS_START_POSITION + BIN_DIMENSIONS_NUM_BYTES;\nexport const BIN_DATA_TYPE_NUM_BYTES = 10;\nexport const BIN_NUM_ELEMENTS_START_POSITION = BIN_DATA_TYPE_START_POSITION + BIN_DATA_TYPE_NUM_BYTES;\nexport const BIN_NUM_ELEMENTS_NUM_BYTES = 1;\nexport const BIN_USE_NULL_START_POSITION = BIN_NUM_ELEMENTS_START_POSITION + BIN_NUM_ELEMENTS_NUM_BYTES;\nexport const BIN_USE_NULL_NUM_BYTES = 1;\nexport const MAX_NUM_ELEMENTS = 255;","import { Vector3 } from 'three';\nimport * as utils from '../shared/utils';\nimport * as constants from '../shared/constants';\nimport * as types from '../shared/types';\n\n// Tom header\n// [22*2 = 44 bytes] uint16_t xsize,ysize,zsize,lmarg,rmarg,tmarg,bmarg,tzmarg,bzmarg,num_samples,num_proj,num_blocks,num_slices,bin,gain,speed,pepper,issue,num_frames,spare_int[13]__attribute__((packed));\n// [13*4 = 52 bytes] float32 scale,offset,voltage,current,thickness,pixel_size,distance,exposure,mag_factor,filterb,correction_factor,spare_float[2]__attribute__((packed));\n// [8*4 = 32 bytes] uint32_t z_shift,z,theta,spare_uint32[5]__attribute__((packed));\n// [384*1 = 384 bytes] char time[26],duration[12],owner[21],user[5],specimen[32],scan[32],comment[64],spare_char[192];\n\nexport async function readTom(file: File) {\n\n\t// Read data.\n\tconst type = await getTomDataType(file);\n\tconst typedArray = (await readData(file, type, constants.TOM_HEADER_NUM_BYTES)) as types.TypedArray;\n\n\t// Check that data is correct size.\n\tconst [dimensions, numElements] = await Promise.all([getTomDimensions(file), getTomNumElements(file)]);\n\tif (typedArray.length !== dimensions.x * dimensions.y * dimensions.z * numElements) {\n\t\tthrow new Error(`Error reading ${file.name}. Expected tom dimensions ${utils.stringifyVector3(dimensions)} not compatible with data of length ${typedArray.length}.`);\n\t}\n\n\treturn typedArray;\n};\n\nexport async function getTomDimensions(file: File) {\n\n\t// Get data.\n\tconst data = await readData(file, 'uint16', constants.TOM_DIMENSIONS_START_POSITION, constants.TOM_DIMENSIONS_NUM_BYTES);\n\n\t// Create Vector3 from dimensions.\n\tconst dim = new Vector3(data[0], data[1], data[2]);\n\tif (!utils.isPositiveInteger(dim.x) || !utils.isPositiveInteger(dim.y)\n        || !utils.isPositiveInteger(dim.z)) {\n\t\tthrow new Error(`Error reading ${file.name}. Tom dimensions must be positive integers: ${utils.stringifyVector3(dim)}`);\n\t}\n\treturn dim;\n};\n\nexport async function getTomNumElements(file: File) {\n\n\t// Read marker from header, should read 'NumEl'.\n\tconst marker = await readString(file, constants.TOM_NUM_ELEMENTS_START_POSITION, constants.TOM_NUM_ELEMENTS_MARKER.length);\n\tif (marker !== constants.TOM_NUM_ELEMENTS_MARKER) {\n\t\t// This is a tom file not generated by us, assume 1 element per voxel.\n\t\treturn 1;\n\t}\n\n\t// Read next byte to get num elements.\n\tconst data = await readData(file, 'uint8', constants.TOM_NUM_ELEMENTS_START_POSITION + constants.TOM_NUM_ELEMENTS_MARKER.length,\n\t\tconstants.TOM_NUM_ELEMENTS_NUM_BYTES - constants.TOM_NUM_ELEMENTS_MARKER.length);\n\n\t// Parse as Uint8.\n\tconst numElements = data[0];\n\tif (!utils.isPositiveInteger(numElements)) {\n\t\tthrow new Error(`Error reading ${file.name}. Invalid num elements: ${numElements}.`);\n\t}\n\treturn numElements;\n};\n\nexport async function getTomUseNull(file: File) {\n\n\t// Read marker from header, should read 'Null'.\n\tconst marker = await readString(file, constants.TOM_USE_NULL_START_POSITION, constants.TOM_USE_NULL_MARKER.length);\n\tif (marker !== constants.TOM_USE_NULL_MARKER) {\n\t\t// This is a tom file not generated by us, assume null is not encoded.\n\t\treturn false;\n\t}\n\n\t// Read next byte to get use null bit.\n\tconst data = await readData(file, 'uint8', constants.TOM_USE_NULL_START_POSITION + constants.TOM_USE_NULL_MARKER.length,\n\t\tconstants.TOM_USE_NULL_NUM_BYTES - constants.TOM_USE_NULL_MARKER.length);\n\n\t// Parse as bool.\n\tconst useNull = data[0];\n\tif (!utils.isNonNegativeInteger(useNull) || useNull > 1) {\n\t\tthrow new Error(`Error reading ${file.name}. Invalid use null flag: ${useNull}.`);\n\t}\n\treturn useNull > 0;\n};\n\nexport async function getTomDataType(file: File) {\n\t// Read string from file.\n\tconst type = (await readString(file, constants.TOM_DATA_TYPE_START_POSITION, constants.TOM_DATA_TYPE_NUM_BYTES)).replace(/\\0/g, '');\n\n\t// Parse data type.\n\tswitch(type) {\n\t\tcase 'float32':\n\t\t\treturn 'float32';\n\t\tcase 'uint32':\n\t\t\treturn 'uint32';\n\t\tcase 'int32':\n\t\t\treturn 'int32';\n\t\tcase 'uint8':\n\t\tdefault:\n\t\t\t// Orig tom data from ct scans do not have datatype info in them.\n\t\t\t// We assume these are uint8.\n\t\t\treturn 'uint8';\n\t}\n}\n\nexport async function readBin(file: File) {\n\t// Read data.\n\tconst type = await getBinDataType(file);\n\tconst typedArray = await readData(file, type, constants.BIN_HEADER_NUM_BYTES);\n\n\t// Check that data is correct size.\n\tconst [length, numElements] = await Promise.all([getBinLength(file), getBinNumElements(file)]);\n\tif (typedArray.length !== length * numElements) {\n\t\tthrow new Error(`Error reading ${file.name}. Expected bin length ${length}, numElements ${numElements} not compatible with data of length ${typedArray.length}.`);\n\t}\n\treturn typedArray;\n};\n\nexport async function getBinLength(file: File) {\n\n\t// Read data as uint32.\n\tconst data = await readData(file, 'uint32', constants.BIN_DIMENSIONS_START_POSITION, constants.BIN_DIMENSIONS_NUM_BYTES);\n\n\t// Create uint32 from dimensions.\n\treturn data[0];\n};\n\nexport async function getBinNumElements(file: File) {\n\n\t// Read data as uint8.\n\tconst data = await readData(file, 'uint8', constants.BIN_NUM_ELEMENTS_START_POSITION, constants.BIN_NUM_ELEMENTS_NUM_BYTES);\n\n\t// Parse as uint8.\n\tconst numElements = data[0];\n\tif (!utils.isPositiveInteger(numElements)) {\n\t\tthrow new Error(`Error reading ${file.name}. Invalid num elements: ${numElements}.`);\n\t}\n\treturn numElements;\n};\n\nexport async function getBinUseNull(file: File) {\n\tconst fullPath = `${file.name}.bin`;\n\n\t// Read data as uint8.\n\tconst data = await readData(file, 'uint8', constants.BIN_USE_NULL_START_POSITION, constants.BIN_USE_NULL_NUM_BYTES);\n\n\t// Parse as bool.\n\tconst useNull = data[0];\n\tif (!utils.isNonNegativeInteger(useNull) || useNull > 1) {\n\t\tthrow new Error(`Error reading ${fullPath}. Invalid use null flag: ${useNull}.`);\n\t}\n\treturn useNull > 0;\n};\n\nexport async function getBinDataType(file: File) {\n\n\t// Read string from file.\n\tconst type = (await readString(file, constants.BIN_DATA_TYPE_START_POSITION, constants.BIN_DATA_TYPE_NUM_BYTES)).replace(/\\0/g, '');\n\n\t// Parse data type.\n\tswitch(type) {\n\t\tcase 'float32':\n\t\t\treturn 'float32';\n\t\tcase 'uint8':\n\t\t\treturn 'uint8';\n\t\tcase 'uint32':\n\t\t\treturn 'uint32';\n\t\tcase 'int32':\n\t\t\treturn 'int32';\n\t\tdefault:\n\t\t\tthrow new Error(`Error reading ${file.name}. Unknown data type: ${type}`);\n\t}\n}\n\nasync function readData(file: File, type: types.TomType | 'uint16', start: number, length?: number) {\n\n\t// Load up buffer with full size of file (minus header).\n    const buffer = await readFileToBuffer(file, start, length);\n\n\tswitch (type) {\n\t\tcase 'uint8':\n\t\t\treturn new Uint8Array(buffer);\n\t\tcase 'uint16':\n\t\t\treturn new Uint16Array(buffer);\n\t\tcase 'uint32':\n\t\t\treturn new Uint32Array(buffer);\n\t\tcase 'int32':\n\t\t\treturn new Int32Array(buffer);\n\t\tcase 'float32':\n\t\t\treturn new Float32Array(buffer);\n\t\tdefault:\n\t\t\tthrow new Error(`Error reading ${file.name}. Unsupported type: ${type}.`);\n\t}\n}\n\nasync function readString(file: File, startPosition: number, length?: number) {\n\tconst reader = new FileReader();\n  \n\treturn new Promise<string>((resolve, reject) => {\n\t\treader.onerror = () => {\n\t\t\treader.abort();\n\t\t\treject(new DOMException(`Problem parsing file: ${file.name}`));\n\t\t};\n\n\t\treader.onload = () => {\n\t\t\tresolve(reader.result as string);\n\t\t};\n\t\tconst blob = file.slice(startPosition, length !== undefined ? startPosition + length : undefined);\n\t\treader.readAsText(blob);\n\t});\n};\n\nasync function readFileToBuffer(file: File, startPosition: number, length?: number) {\n\tconst reader = new FileReader();\n  \n\treturn new Promise<ArrayBuffer>((resolve, reject) => {\n\t\treader.onerror = () => {\n\t\t\treader.abort();\n\t\t\treject(new DOMException(`Problem parsing file: ${file.name}`));\n\t\t};\n\n\t\treader.onload = () => {\n\t\t\tresolve(reader.result as ArrayBuffer);\n\t\t};\n\t\tconst blob = file.slice(startPosition, length !== undefined ? startPosition + length : undefined);\n\t\treader.readAsArrayBuffer(blob);\n\t});\n};\n\n// export function writeTom(path: string, filename: string, typedArray: types.TypedArray, dimensions: Vector3, numElements = 1, useNull = false) {\n// \tconst fullPath = `${path}${filename}.tom`;\n\n// \t// Check typedArray.\n// \tconst { length } = typedArray;\n// \tif (length === 0) {\n// \t\tthrow new Error(`Error saving ${fullPath}. Attempting to save array of length 0.`);\n// \t}\n// \tif (length !== dimensions.x * dimensions.y * dimensions.z * numElements) {\n// \t\tthrow new Error(`Error saving ${fullPath}. Dimensions ${utils.stringifyVector3(dimensions)}, num elements per voxel: ${numElements} not compatible with data of length ${length}.`);\n// \t}\n\t\n// \t// Get data type from TypedArray.\n// \tconst type = utils.typeOfTypedArray(typedArray);\n// \t// Get data type length.\n// \tconst dataLength = utils.dataSizeForType(type);\n\t\n// \t// Create buffer.\n// \tconst buffer = Buffer.alloc(constants.TOM_HEADER_NUM_BYTES + typedArray.length * dataLength);\n\n// \t// Write header.\n// \twriteTomHeaderToBuffer(fullPath, buffer, type, dimensions, numElements, useNull);\n\n// \t// Fill remainder of buffer with data.\n// \twriteDataToBuffer(fullPath, typedArray, buffer, constants.TOM_HEADER_NUM_BYTES);\n\t\n// \t// Write file.\n// \tlet fd = fs.openSync(fullPath, 'w');\n// \tfs.writeSync(fd, buffer);\n\t\n// \t// Close file.\n// \tfs.closeSync(fd);\n// }\n\n// export function writeTomHeaderToBuffer(fullPath: string, buffer: Buffer, type: types.TomType, dimensions: Vector3, numElements = 1, useNull = false) {\n// \t// Check that numElements is a valid number.\n// \tif (numElements > constants.MAX_NUM_ELEMENTS) {\n// \t\tthrow new Error(`Error saving ${fullPath}. Invalid num elements: ${numElements}.`);\n// \t}\n\n// \t// Write dimensions of tom data to header.\n// \twriteDataToBuffer(fullPath, new Uint16Array(dimensions.toArray()), buffer, constants.TOM_DIMENSIONS_START_POSITION);\n\n// \t// Write data type to header.\n// \twriteStringToBuffer(fullPath, type, buffer, constants.TOM_DATA_TYPE_START_POSITION, constants.TOM_DATA_TYPE_NUM_BYTES);\n\n// \t// Write num elements to header.\n// \twriteStringToBuffer(fullPath, constants.TOM_NUM_ELEMENTS_MARKER, buffer, constants.TOM_NUM_ELEMENTS_START_POSITION, constants.TOM_NUM_ELEMENTS_MARKER.length);\n// \twriteDataToBuffer(fullPath, new Uint8Array([numElements]), buffer, constants.TOM_NUM_ELEMENTS_START_POSITION + constants.TOM_NUM_ELEMENTS_MARKER.length);\n\n// \t// Write useNull to header.\n// \twriteStringToBuffer(fullPath, constants.TOM_USE_NULL_MARKER, buffer, constants.TOM_USE_NULL_START_POSITION, constants.TOM_USE_NULL_MARKER.length);\n// \twriteDataToBuffer(fullPath, new Uint8Array([useNull ? 1 : 0]), buffer, constants.TOM_USE_NULL_START_POSITION + constants.TOM_USE_NULL_MARKER.length);\n// }\n\n// export function writeBin(path: string, filename: string, typedArray: types.TypedArray, numElements = 1, useNull = false) {\n// \tconst fullPath = `${path}${filename}.bin`;\n\n// \t// Check typedArray.\n// \tconst { length } = typedArray;\n// \tif (length === 0) {\n// \t\tthrow new Error(`Error saving ${fullPath}. Attempting to save array of length 0.`);\n// \t}\n// \tif (length % numElements !== 0) {\n// \t\tthrow new Error(`Error saving ${fullPath}. Num elements per entry: ${numElements} not compatible with data of length ${length}.`);\n// \t}\n// \tif (numElements > constants.MAX_NUM_ELEMENTS) {\n// \t\tthrow new Error(`Error saving ${fullPath}. Invalid num elements: ${numElements}.`);\n// \t}\n\n// \t// Get data type from TypedArray.\n// \tconst type = utils.typeOfTypedArray(typedArray);\n// \tconst dataLength = utils.dataSizeForType(type);\n\n// \t// Create buffer.\n// \tconst buffer = Buffer.alloc(constants.BIN_HEADER_NUM_BYTES + typedArray.length * dataLength);\n\n// \t// Write length to header.\n// \tbuffer.writeUInt32LE(length / numElements, constants.BIN_DIMENSIONS_START_POSITION);\n\n// \t// Write data type to header.\n// \twriteStringToBuffer(fullPath, type, buffer, constants.BIN_DATA_TYPE_START_POSITION, constants.BIN_DATA_TYPE_NUM_BYTES);\n\n// \t// Write num elements to header.\n// \twriteDataToBuffer(fullPath, new Uint8Array([numElements]), buffer, constants.BIN_NUM_ELEMENTS_START_POSITION);\n\n// \t// Write useNull to header.\n// \twriteDataToBuffer(fullPath, new Uint8Array([useNull ? 1 : 0]), buffer, constants.BIN_USE_NULL_START_POSITION);\n\t\n// \t// Fill remainder of buffer with data.\n// \twriteDataToBuffer(fullPath, typedArray, buffer, constants.BIN_HEADER_NUM_BYTES);\n\n// \t// Write file.\n// \tlet fd = fs.openSync(fullPath, 'w');\n// \tfs.writeSync(fd, buffer);\n\n// \t// Close file.\n// \tfs.closeSync(fd);\n// }\n\n// function writeStringToBuffer(fullPath: string, type: types.TomType | typeof constants.TOM_NUM_ELEMENTS_MARKER | typeof constants.TOM_USE_NULL_MARKER,\n// \tbuffer: Buffer, startPosition: number, numBytes: number) {\n\n// \tconst stringBuffer = Buffer.from(type, 'utf-8');\n// \tif (stringBuffer.length > numBytes) {\n// \t\tthrow new Error(`Error saving ${fullPath}. Not enough bytes (${numBytes}) to store string ${type}`);\n// \t}\n// \tfor (let i = 0; i < stringBuffer.length; i++) {\n// \t\tbuffer[startPosition + i] = stringBuffer[i];\n// \t}\n// }\n\n// function writeDataToBuffer(fullPath: string, typedArray: types.TypedArray | Uint16Array, buffer: Buffer, startPosition: number) {\n// \t// Write data to buffer.\n// \tconst { length } = typedArray;\n// \tconst type = utils.typeOfTypedArray(typedArray);\n// \tswitch (type) {\n// \t\tcase 'uint8':\n// \t\t\tfor (let i = 0; i < length; i++) {\n// \t\t\t\tbuffer[i + startPosition] = typedArray[i];\n// \t\t\t}\n// \t\t\tbreak;\n// \t\tcase 'uint32':\n// \t\t\tfor (let i = 0; i < length; i++) {\n// \t\t\t\tbuffer.writeUInt32LE(typedArray[i], 4 * i + startPosition);\n// \t\t\t}\n// \t\t\tbreak;\n// \t\tcase 'int32':\n// \t\t\tfor (let i = 0; i < length; i++) {\n// \t\t\t\tbuffer.writeInt32LE(typedArray[i], 4 * i + startPosition);\n// \t\t\t}\n// \t\t\tbreak;\n// \t\tcase 'float32':\n// \t\t\tfor (let i = 0; i < length; i++) {\n// \t\t\t\tbuffer.writeFloatLE(typedArray[i], 4 * i + startPosition);\n// \t\t\t}\n// \t\t\tbreak;\n// \t\tcase 'uint16':\n// \t\t\tfor (let i = 0; i < length; i++) {\n// \t\t\t\tbuffer.writeUInt16LE(typedArray[i], 2 * i + startPosition);\n// \t\t\t}\n// \t\t\tbreak;\n// \t\tdefault:\n// \t\t\tthrow new Error(`Error saving ${fullPath}.  Unknown typed array constructor ${typedArray.constructor}.`);\n// \t}\n// }","import { Axis, TypedArray, TomType, VisualStyleType, SelectionAtom } from '../shared/types';\nimport * as io from './io';\nimport { Vector3, Color } from 'three';\nimport { atom } from 'recoil';\nimport randomColor from 'randomcolor';\nimport { bufferedSelections, getVector3TomFilenames } from '../state/DataState';\nimport { BufferedSelection } from './BufferedSelection';\n\n// This is a place to store data about a small section of a tom file that we want to examine.\n\nexport async function makeBufferedTomSelectionFromFile(file: File) {\n\t// TODO: eventually add on offset to this to load part of the file.\n\tconst [data, dimensions, numElements, type, useNull] = await Promise.all([\n\t\tio.readTom(file),\n\t\tio.getTomDimensions(file),\n\t\tio.getTomNumElements(file),\n\t\tio.getTomDataType(file),\n\t\tio.getTomUseNull(file),\n\t]);\n\tif (numElements === 1 && useNull === false) {\n\t\treturn new BufferedTomScalarSelection(file, data, dimensions, useNull, type);\n\t}\n\treturn new BufferedTomVectorSelection(file, data, dimensions, useNull, type, numElements);\n}\n\nclass BufferedTomSelection extends BufferedSelection {\n\t// Layer data.\n\tprotected layer: TypedArray;\n\t// Internal variables for book keeping.\n\tprotected layerNeedsUpdate = true;\n\tprivate layerNum = -1;\n\tprivate axis = Axis.Z; // Data is z-indexed by default.\n\t// Variables for calculations.\n\tprotected readonly dimensions: Vector3;\n\t\n\tconstructor(filename: string, data: TypedArray, dimensions: Vector3, numElements: number, useNull: boolean, type: TomType) {\n\t\tsuper(filename, data, dimensions.x * dimensions.y * dimensions.z, numElements, useNull, type);\n\t\tthis.dimensions = dimensions;\n\n\t\t// Init layer storage.\n\t\tconst LAYER_LENGTH = this.calcLayerLength();\n\t\tthis.layer = data.slice(0, LAYER_LENGTH);\n\t}\n\n\tprotected calcLayerLength() {\n\t\treturn  this.numElements * this.dimensions.x * this.dimensions.y * this.dimensions.z / this.dimensions.toArray()[this.axis];\n\t}\n\n\tprotected setAxis(axis: Axis) {\n\t\tif (this.axis === axis) {\n\t\t\treturn;\n\t\t}\n\t\tthis.layerNeedsUpdate = true;\n\t\tthis.colorsNeedsUpdate = true;\n\n\t\t// Reindex data.\n\t\t// TODO: do this.\n\n\t\t// Update internal variables.\n\t\tthis.axis = axis;\n\t}\n\n\tprotected setLayerNum(layerNum: number) {\n\t\tif (this.layerNum === layerNum) {\n\t\t\treturn;\n\t\t}\n\t\t// Update internal variables.\n\t\tthis.layerNeedsUpdate = true;\n\t\tthis.colorsNeedsUpdate = true;\n\t\tthis.layerNum = layerNum;\n\t}\n\n\tgetLayerData(axis: Axis, layerNum: number) {\n\t\t// Update data if needed.\n\t\tthis.setAxis(axis);\n\t\tthis.setLayerNum(layerNum);\n\n\t\t// Check if we need to update the data.\n\t\tif (!this.layerNeedsUpdate) {\n\t\t\treturn this.layer;\n\t\t}\n\n\t\t// Copy data into array.\n\t\tconst LAYER_LENGTH = this.layer.length;\n\t\tfor (let i = 0; i < LAYER_LENGTH; i++) {\n\t\t\tthis.layer[i] = this.data[i + layerNum * LAYER_LENGTH];\n\t\t}\n\t\t\n\t\t// Return layer.\n\t\treturn this.layer;\n\t}\n}\n\nexport class BufferedTomScalarSelection extends BufferedTomSelection {\n\t// Texture array.\n\tprivate rgbTexture: Uint8Array;\n\t\n\tconstructor(file: File, data: TypedArray, dimensions: Vector3, useNull: boolean, type: TomType) {\n\t\tsuper(file.name, data, dimensions, 1, useNull, type);\n\n\t\t// Init textures.\n\t\tconst LAYER_LENGTH = this.calcLayerLength();\n\t\tthis.rgbTexture = new Uint8Array(3 * LAYER_LENGTH);\n\t}\n\n\tupdateAtomDefaultsAfterDataLoaded() {\n\t\tconst filename = this.filename;\n\t\t// Set default colormode.\n\t\tthis.__visualStyle = 'scalarField';\n\t\tthis.__colorMode = this.layer.constructor === Uint8Array ? 'greyscale' : 'spectral';\n\t\tthis.__colorZeroCentered = false;\n\n\t\tthis.atom = atom<SelectionAtom>({\n\t\t\tkey: `${filename}_atom`,\n\t\t\tdefault: {\n\t\t\t\tfilename,\n\t\t\t\tvisualStyle: this.__visualStyle,\n\t\t\t\tcolorMode: this.__colorMode,\n\t\t\t\tcolorZeroCentered: this.__colorZeroCentered,\n\t\t\t},\n\t\t});\n\t}\n\n\tgetLayerTexture(axis: Axis, layerNum: number, atom: SelectionAtom) {\n\t\t// Update layer data if needed.\n\t\tconst layer = this.getLayerData(axis, layerNum);\n\n\t\t// Update internal variables.\n\t\tconst { colorMode, colorZeroCentered } = atom;\n\t\tthis.setColorMode(colorMode);\n\t\tthis.setColorZeroCentered(colorZeroCentered);\n\n\t\t// If nothing has changed, return last computed value.\n\t\tif (!this.colorsNeedsUpdate) {\n\t\t\treturn this.rgbTexture;\n\t\t}\n\t\t\n\t\t// Copy data into array.\n\t\tconst LAYER_LENGTH = layer.length;\n\t\tlet { min, max } = this;\n\t\tif (colorZeroCentered) {\n\t\t\tconst amplitude = Math.max(Math.abs(max), Math.abs(min));\n\t\t\tmin = -amplitude;\n\t\t\tmax = amplitude;\n\t\t}\n\t\tconst range = max - min;\n\t\tconst color = new Color();\n\t\tfor (let i = 0; i < LAYER_LENGTH; i++) {\n\t\t\t// Calc color from layer data.\n\t\t\tconst val = layer[i];\n\t\t\tif (this.nullVal !== null && val === this.nullVal) {\n\t\t\t\tthis.rgbTexture[3 * i] = 0;\n\t\t\t\tthis.rgbTexture[3 * i + 1] = 0;\n\t\t\t\tthis.rgbTexture[3 * i + 2] = 0;\n\t\t\t} else if (colorMode === 'spectral') {\n\t\t\t\tconst scaledVal = (1 - val / range) * 0.7;\n\t\t\t\tcolor.setHSL(scaledVal, 1, 0.5);\n\t\t\t\tthis.rgbTexture[3 * i] = Math.round(color.r * 255);\n\t\t\t\tthis.rgbTexture[3 * i + 1] = Math.round(color.g * 255);\n\t\t\t\tthis.rgbTexture[3 * i + 2] = Math.round(color.b * 255);\n\t\t\t} else {\n\t\t\t\tconst scaledVal = Math.round((val - min) / range * 255);\n\t\t\t\tthis.rgbTexture[3 * i] = scaledVal;\n\t\t\t\tthis.rgbTexture[3 * i + 1] = scaledVal;\n\t\t\t\tthis.rgbTexture[3 * i + 2] = scaledVal;\n\t\t\t}\n\t\t}\n\n\t\t// Update internal variables.\n\t\tthis.colorsNeedsUpdate = false;\n\n\t\treturn this.rgbTexture;\n\t}\n}\n\nexport class BufferedTomVectorSelection extends BufferedTomSelection {\n\t// Vector data.\n\tprotected positions!: Float32Array;\n\tprotected vertexColors!: Float32Array;\n\t\n\tconstructor(file: File, data: TypedArray, dimensions: Vector3, useNull: boolean, type: TomType, numElements: number) {\n\t\tsuper(file.name, data, dimensions, numElements, useNull, type);\n\t}\n\n\tupdateAtomDefaultsAfterDataLoaded() {\n\t\tconst filename = this.filename.toLowerCase();\n\t\tconst vector3Filenames = getVector3TomFilenames();\n\n\t\t// Set default colormode.\n\t\tthis.__colorMode = 'hex';\n\t\tthis.__colorHex = randomColor();\n\t\tthis.__colorZeroCentered = false;\n\n\t\tif (filename.includes('normal')) {\n\t\t\tthis.__visualStyle = 'vector';\n\t\t\tthis.__vectorDataFilename = this.filename;\n\t\t} else if (filename.includes('point')) {\n\t\t\tthis.__visualStyle = 'point';\n\t\t\tthis.__pointDataFilename = this.filename;\n\t\t} else if (filename.includes('indices')) {\n\t\t\tthis.__visualStyle = 'point';\n\t\t\tthis.__pointDataFilename = vector3Filenames.find(filename => filename.toLowerCase().includes('point'));\n\t\t\tthis.__colorMode = 'spectral';\n\t\t\tthis.__colorDataFilename = this.filename;\n\t\t} else if (filename.includes('width')) {\n\t\t\tthis.__visualStyle = 'vector';\n\t\t\tthis.__vectorScaleFilename = this.filename;\n\t\t\tthis.__vectorDataFilename = vector3Filenames.find(filename => filename.toLowerCase().includes('normalsrelaxed')) ||  vector3Filenames.find(filename => filename.toLowerCase().includes('normals'));\n\t\t\tthis.__vectorOffsetFilename = vector3Filenames.find(filename => filename.toLowerCase().includes('point'));\n\t\t} else {\n\t\t\tthis.__visualStyle = 'point';\n\t\t}\n\n\t\t// Set atom.\n\t\tthis.atom = atom<SelectionAtom>({\n\t\t\tkey: `${filename}_atom`,\n\t\t\tdefault: {\n\t\t\t\tfilename,\n\t\t\t\tvisualStyle: this.__visualStyle,\n\t\t\t\tpointDataFilename: this.__pointDataFilename,\n\t\t\t\tvectorDataFilename: this.__vectorDataFilename,\n\t\t\t\tvectorOffsetFilename: this.__vectorOffsetFilename,\n\t\t\t\tvectorScaleFilename: this.__vectorScaleFilename,\n\t\t\t\tcolorMode: this.__colorMode,\n\t\t\t\tcolorHex: this.__colorHex,\n\t\t\t\tcolorZeroCentered: this.__colorZeroCentered,\n\t\t\t\tcolorDataFilename: this.__colorDataFilename,\n\t\t\t},\n\t\t});\n\n\t\tthis.positions = new Float32Array(this.positionsDataLengthForVisualStyle(this.__visualStyle));\n\t\tthis.vertexColors = new Float32Array(this.positions.length);\n\t}\n\n\tprivate positionsDataLengthForVisualStyle(visualStyle: VisualStyleType) {\n\t\tconst LAYER_LENGTH = this.calcLayerLength();\n\t\treturn visualStyle === 'vector' ? 3 * LAYER_LENGTH * 2 : 3 * LAYER_LENGTH;\n\t}\n\n\tprivate setVisualStyle(visualStyle: VisualStyleType) {\n\t\tif (this.__visualStyle === visualStyle) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__visualStyle = visualStyle;\n\t\tthis.positions = new Float32Array(this.positionsDataLengthForVisualStyle(this.__visualStyle));\n\t\tthis.geometryNeedsUpdate = true;\n\t\tthis.colorsNeedsUpdate = true;\n\t}\n\n\tprotected setAxis(axis: Axis) {\n\t\tsuper.setAxis(axis);\n\t\tthis.geometryNeedsUpdate = true;\n\t}\n\n\tprotected setLayerNum(layerNum: number) {\n\t\tsuper.setLayerNum(layerNum);\n\t\tthis.geometryNeedsUpdate = true;\n\t}\n\n\tgetLayerPositions(axis: Axis, layerNum: number, atom: SelectionAtom) {\n\t\t// Update layer if needed.\n\t\tconst layer = this.getLayerData(axis, layerNum);\n\n\t\t// Update internal variables.\n\t\tthis.setAxis(axis);\n\t\tthis.setLayerNum(layerNum);\n\t\tconst {\n\t\t\tvisualStyle,\n\t\t\tpointDataFilename,\n\t\t\tvectorDataFilename,\n\t\t\tvectorOffsetFilename,\n\t\t\tvectorScaleFilename,\n\t\t\tcolorMode,\n\t\t\tcolorHex,\n\t\t\tcolorZeroCentered,\n\t\t\tcolorDataFilename,\n\t\t} = atom;\n\t\tthis.setVisualStyle(visualStyle);\n\t\tthis.setPointDataFilename(pointDataFilename);\n\t\tthis.setVectorDataFilename(vectorDataFilename);\n\t\tthis.setVectorOffsetFilename(vectorOffsetFilename);\n\t\tthis.setColorMode(colorMode);\n\t\tthis.setColorHex(colorHex);\n\t\tthis.setColorZeroCentered(colorZeroCentered);\n\t\tthis.setColorDataFilename(colorDataFilename);\n\n\t\t// Return last vals in case nothing has changed\n\t\tif (!this.colorsNeedsUpdate && !this.geometryNeedsUpdate) {\n\t\t\treturn {\n\t\t\t\tpositions: this.positions,\n\t\t\t\tcount: this.count,\n\t\t\t\tvertexColors: this.vertexColors,\n\t\t\t}\n\t\t}\n\n\t\t// Get dependencies.\n\t\tconst dependencies: {\n\t\t\tpointData?: TypedArray,\n\t\t\tvectorData? : TypedArray,\n\t\t\tvectorOffset?: TypedArray,\n\t\t\tvectorScale?: TypedArray,\n\t\t\tcolorData?: TypedArray,\n\t\t\tcolorDataSelection?: BufferedTomSelection,\n\t\t} = {};\n\t\tif (pointDataFilename) {\n\t\t\tdependencies.pointData = (bufferedSelections[pointDataFilename] as BufferedTomVectorSelection).getLayerData(axis, layerNum);\n\t\t}\n\t\tif (vectorDataFilename) {\n\t\t\tdependencies.vectorData = (bufferedSelections[vectorDataFilename] as BufferedTomVectorSelection).getLayerData(axis, layerNum);\n\t\t}\n\t\tif (vectorOffsetFilename) {\n\t\t\tdependencies.vectorOffset = (bufferedSelections[vectorOffsetFilename] as BufferedTomVectorSelection).getLayerData(axis, layerNum);\n\t\t}\n\t\tif (vectorScaleFilename) {\n\t\t\tdependencies.vectorScale = (bufferedSelections[vectorScaleFilename] as BufferedTomVectorSelection).getLayerData(axis, layerNum);\n\t\t}\n\t\tif (colorDataFilename) {\n\t\t\tdependencies.colorDataSelection = bufferedSelections[colorDataFilename] as BufferedTomSelection;\n\t\t\tif (dependencies.colorDataSelection) {\n\t\t\t\tdependencies.colorData = dependencies.colorDataSelection.getLayerData(axis, layerNum);\n\t\t\t}\n\t\t}\n\n\t\t// First update colors.\n\t\tif (this.colorsNeedsUpdate) {\n\t\t\tconst X_LENGTH = axis === Axis.X ? 1 : this.dimensions.x;\n\t\t\tconst Y_LENGTH = axis === Axis.Y ? 1 : this.dimensions.y;\n\t\t\tconst Z_LENGTH = axis === Axis.Z ? 1 : this.dimensions.z;\n\t\t\tlet count = 0;\n\t\t\tfor (let z = 0; z < Z_LENGTH; z++) {\n\t\t\t\tfor (let y = 0; y < Y_LENGTH; y++) {\n\t\t\t\t\tfor (let x = 0; x < X_LENGTH; x++) {\n\t\t\t\t\t\tconst i = z * X_LENGTH * Y_LENGTH + y * X_LENGTH + x;\n\t\t\t\t\t\tif (layer[this.numElements * i] === this.nullVal) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// First calculate vertex color.\n\t\t\t\t\t\tconst color = new Color();\n\t\t\t\t\t\tif (colorMode === 'hex' && colorHex) {\n\t\t\t\t\t\t\tconst colorInt = parseInt(colorHex.substr(1), 16);\n\t\t\t\t\t\t\tif (!isNaN(colorInt)) {\n\t\t\t\t\t\t\t\tcolor.setHex(colorInt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dependencies.colorData && dependencies.colorDataSelection) {\n\t\t\t\t\t\t\tlet { min, max } = dependencies.colorDataSelection;\n\t\t\t\t\t\t\tif (colorZeroCentered) {\n\t\t\t\t\t\t\t\tconst amplitude = Math.max(Math.abs(max), Math.abs(min));\n\t\t\t\t\t\t\t\tmin = -amplitude;\n\t\t\t\t\t\t\t\tmax = amplitude;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst val = (dependencies.colorData[i] - min) / (max - min);\n\t\t\t\t\t\t\tif (colorMode === 'greyscale') {\n\t\t\t\t\t\t\t\tcolor.setRGB(val, val, val);\n\t\t\t\t\t\t\t} else if (colorMode === 'spectral') {\n\t\t\t\t\t\t\t\tcolor.setHSL(val * 0.7, 1, 0.5);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.vertexColors[3 * count] = color.r;\n\t\t\t\t\t\tthis.vertexColors[3 * count + 1] = color.g;\n\t\t\t\t\t\tthis.vertexColors[3 * count + 2] = color.b;\n\n\t\t\t\t\t\t// const colorDatum = dependencies.colorData[i];\n\t\t\t\t\t\tif (visualStyle === 'point') {\n\t\t\t\t\t\t\t// Create points data.\n\t\t\t\t\t\t\tif (dependencies.pointData) {\n\t\t\t\t\t\t\t\tif (dependencies.pointData[3* i] === this.nullVal) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (visualStyle === 'vector') {\n\t\t\t\t\t\t\tif (!dependencies.vectorData) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Make starting point.\n\t\t\t\t\t\t\tif (dependencies.vectorOffset) {\n\t\t\t\t\t\t\t\tif (dependencies.vectorOffset[3* i] === this.nullVal) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcount++\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcount++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Add same color for second point.\n\t\t\t\t\t\t\tthis.vertexColors[3 * count] = this.vertexColors[3 * (count - 1)];\n\t\t\t\t\t\t\tthis.vertexColors[3 * count + 1] = this.vertexColors[3 * (count - 1) + 1];\n\t\t\t\t\t\t\tthis.vertexColors[3 * count + 2] = this.vertexColors[3 * (count - 1) + 2];\n\t\t\t\t\t\t\tcount++\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.colorsNeedsUpdate = false;\n\t\t}\n\t\t\n\t\t// Then update positions.\n\t\tif (this.geometryNeedsUpdate) {\n\t\t\t// Copy data into array.\n\t\t\tconst X_LENGTH = axis === Axis.X ? 1 : this.dimensions.x;\n\t\t\tconst Y_LENGTH = axis === Axis.Y ? 1 : this.dimensions.y;\n\t\t\tconst Z_LENGTH = axis === Axis.Z ? 1 : this.dimensions.z;\n\t\t\t// TODO: do this loop in most efficient order for data.\n\t\t\tlet count = 0;\n\t\t\tfor (let z = 0; z < Z_LENGTH; z++) {\n\t\t\t\tfor (let y = 0; y < Y_LENGTH; y++) {\n\t\t\t\t\tfor (let x = 0; x < X_LENGTH; x++) {\n\t\t\t\t\t\tconst i = z * X_LENGTH * Y_LENGTH + y * X_LENGTH + x;\n\t\t\t\t\t\tif (layer[this.numElements * i] === this.nullVal) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (visualStyle === 'point') {\n\t\t\t\t\t\t\t// Create points data.\n\t\t\t\t\t\t\tif (dependencies.pointData) {\n\t\t\t\t\t\t\t\tif (dependencies.pointData[3* i] === this.nullVal) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.positions[3 * count] = dependencies.pointData[3 * i];\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 1] = dependencies.pointData[3 * i + 1];\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 2] = dependencies.pointData[3 * i + 2];\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Use center point of voxel.\n\t\t\t\t\t\t\t\tthis.positions[3 * count] = x + 0.5;\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 1] = y + 0.5;\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 2] = layerNum + 0.5;\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (visualStyle === 'vector') {\n\t\t\t\t\t\t\tif (!dependencies.vectorData) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Make starting point.\n\t\t\t\t\t\t\tif (dependencies.vectorOffset) {\n\t\t\t\t\t\t\t\tif (dependencies.vectorOffset[3* i] === this.nullVal) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.positions[3 * count] = dependencies.vectorOffset[3 * i];\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 1] = dependencies.vectorOffset[3 * i + 1];\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 2] = dependencies.vectorOffset[3 * i + 2];\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Use center point of voxel.\n\t\t\t\t\t\t\t\tthis.positions[3 * count] = x + 0.5;\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 1] = y + 0.5;\n\t\t\t\t\t\t\t\tthis.positions[3 * count + 2] = layerNum + 0.5;\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Add second point to complete segment.\n\t\t\t\t\t\t\tif (dependencies.vectorData[3* i] === this.nullVal) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet scale = dependencies.vectorScale ? dependencies.vectorScale[i] : 1;\n\t\t\t\t\t\t\tthis.positions[3 * count] = this.positions[3 * (count - 1)] + scale * dependencies.vectorData[3 * i];\n\t\t\t\t\t\t\tthis.positions[3 * count + 1] = this.positions[3 * (count - 1) + 1] + scale * dependencies.vectorData[3 * i + 1];\n\t\t\t\t\t\t\tthis.positions[3 * count + 2] = this.positions[3 * (count - 1) + 2] + scale * dependencies.vectorData[3 * i + 2];\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.count = count;\n\n\t\t\t// Update internal variables.\n\t\t\tthis.geometryNeedsUpdate = false;\n\t\t}\n\n\t\treturn {\n\t\t\tpositions: this.positions,\n\t\t\tcount: this.count,\n\t\t\tvertexColors: this.vertexColors,\n\t\t};\n\t}\n}","import { RecoilState } from 'recoil';\nimport { ColorMode, SelectionAtom, TomType, TypedArray, VisualStyleType } from '../shared/types';\nimport { nullValForType } from '../shared/utils';\n\nexport class BufferedSelection {\n\t// 3D data.\n\tprotected data: TypedArray;\n\t// Atom for updates in react.\n\tprotected atom!: RecoilState<SelectionAtom>;\n\t// Internal variables for book keeping.\n\tprotected nullVal: number | null = null;\n\tprotected geometryNeedsUpdate = true;\n\tprotected colorsNeedsUpdate = true;\n\tprotected __visualStyle!: VisualStyleType;\n\tprotected __pointDataFilename?: string;\n\tprotected __vectorDataFilename?: string;\n\tprotected __vectorOffsetFilename?: string;\n\tprotected __vectorScaleFilename?: string;\n\tprotected __colorMode: ColorMode = 'hex';\n\tprotected __colorZeroCentered = false;\n\tprotected __colorHex?: string;\n\tprotected __colorDataFilename?: string;\n\t// Vector data.\n\tprotected positions?: Float32Array;\n\tprotected count = 0;\n\tprotected vertexColors?: Float32Array;\n\t// Variables for calculations.\n\treadonly numElements: number;\n\treadonly length: number;\n\t// Other immutable parameters.\n\treadonly min: number;\n\treadonly max: number;\n\treadonly type: string;\n\treadonly filename: string;\n\t\n\tconstructor(filename: string, data: TypedArray, length: number, numElements: number, useNull: boolean, type: TomType) {\n\t\tthis.filename = filename;\n\t\tthis.data = data;\n\t\tthis.length = length;\n\t\tthis.numElements = numElements;\n\t\tthis.nullVal = useNull ? nullValForType(type) : null;\n\t\tthis.type = type;\n\n\t\t// Find min and max of data.\n\t\tlet max = -Infinity;\n\t\tlet min = Infinity;\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tconst val = data[i];\n\t\t\tif (this.nullVal !== null && val === this.nullVal) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tmax = Math.max(max, val);\n\t\t\tmin = Math.min(min, val);\n\t\t}\n\t\tif (min === Infinity) {\n\t\t\tmin = 0;\n\t\t\tmax = 0;\n\t\t}\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t\tif (type === 'uint8') {\n\t\t\tthis.min = 0;\n\t\t\tthis.max = 255;\n\t\t}\n\t}\n\n\tgetAtom() {\n\t\treturn this.atom;\n\t}\n\n\tgetData() {\n\t\treturn this.data;\n\t}\n\n\tprotected setPointDataFilename(pointDataFilename?: string) {\n\t\tif (this.__pointDataFilename === pointDataFilename) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__pointDataFilename = pointDataFilename;\n\t\tthis.geometryNeedsUpdate = true;\n\t}\n\n\tprotected setVectorDataFilename(vectorDataFilename?: string) {\n\t\tif (this.__vectorDataFilename === vectorDataFilename) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__vectorDataFilename = vectorDataFilename;\n\t\tthis.geometryNeedsUpdate = true;\n\t}\n\n\tprotected setVectorOffsetFilename(vectorOffsetFilename?: string) {\n\t\tif (this.__vectorOffsetFilename === vectorOffsetFilename) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__vectorOffsetFilename = vectorOffsetFilename;\n\t\tthis.geometryNeedsUpdate = true;\n\t}\n\n\tprotected setVectorScaleFilename(vectorScaleFilename?: string) {\n\t\tif (this.__vectorScaleFilename === vectorScaleFilename) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__vectorScaleFilename = vectorScaleFilename;\n\t\tthis.geometryNeedsUpdate = true;\n\t}\n\n\tprotected setColorMode(colorMode: ColorMode) {\n\t\tif (this.__colorMode === colorMode) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__colorMode = colorMode;\n\t\tthis.colorsNeedsUpdate = true;\n\t}\n\n\tprotected setColorZeroCentered(colorZeroCentered: boolean) {\n\t\tif (this.__colorZeroCentered === colorZeroCentered) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__colorZeroCentered = colorZeroCentered;\n\t\tthis.colorsNeedsUpdate = true;\n\t}\n\n\tprotected setColorHex(colorHex?: string) {\n\t\tif (this.__colorHex === colorHex) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__colorHex = colorHex;\n\t\tthis.colorsNeedsUpdate = true;\n\t}\n\n\tprotected setColorDataFilename(colorDataFilename?: string) {\n\t\tif (this.__colorDataFilename === colorDataFilename) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__colorDataFilename = colorDataFilename;\n\t\tthis.colorsNeedsUpdate = true;\n\t}\n\n\tisScalarType() {\n\t\t// We'll consider anything with nulls a vector type.\n\t\treturn this.numElements === 1 && this.nullVal === null;\n\t}\n\n\tisVectorType() {\n\t\t// We'll consider anything with nulls a vector type.\n\t\treturn this.numElements > 1 || this.nullVal !== null;\n\t}\n\n\tisVector3Type() {\n\t\treturn this.numElements === 3;\n\t}\n\n\tisVector1Type() {\n\t\treturn this.numElements === 1;\n\t}\n\n\n\tdispose() {\n\t\t// Delete atom.\n\n\t}\n}","\nconst file = 'DB-1538_58x58x58';\nconst filenames: string[] = [\n\t`${file}_raw.tom`,\n\t`${file}_clipped.tom`,\n\t`${file}_GX.tom`,\n\t`${file}_GX_3X.tom`,\n\t`${file}_GY.tom`,\n\t`${file}_GY_3X.tom`,\n\t`${file}_GZ.tom`,\n\t`${file}_GZ_3X.tom`,\n\t`${file}_GXX.tom`,\n\t`${file}_GXX_3X.tom`,\n\t`${file}_GYY.tom`,\n\t`${file}_GYY_3X.tom`,\n\t`${file}_GZZ.tom`,\n\t`${file}_GZZ_3X.tom`,\n\t`${file}_GXY.tom`,\n\t`${file}_GXY_3X.tom`,\n\t`${file}_GYZ.tom`,\n\t`${file}_GYZ_3X.tom`,\n\t`${file}_GXZ.tom`,\n\t`${file}_GXZ_3X.tom`,\n\t`${file}_normals.tom`,\n\t`${file}_responses.tom`,\n\t`${file}_normalsRelaxed.tom`,\n\t`${file}_responsesRelaxed.tom`,\n\t`${file}_blurred.tom`,\n\t`${file}_allPoints.tom`,\n\t`${file}_allWidthsMax.tom`,\n\t`${file}_allWidthsMin.tom`,\n\t`${file}_allIndices.tom`,\n\t`${file}_allPointsList.bin`,\n\t`${file}_allNormalsList.bin`,\n\t`${file}_indices.tom`,\n\t`${file}_points3DList.bin`,\n\t`${file}_normalsList.bin`,\n\t`${file}_widthsMinList.bin`,\n\t`${file}_widthsMaxList.bin`,\n\t`${file}_indices_FLAGGED.tom`,\n\t`${file}_points3DList_FLAGGED.bin`,\n\t`${file}_normalsList_FLAGGED.bin`,\n\t`${file}_widthsMinList_FLAGGED.bin`,\n\t`${file}_widthsMaxList_FLAGGED.bin`,\n\t`${file}_meshNeighborsList.bin`,\n\t`${file}_meshNumbersList.bin`,\n];\nconst URLS = filenames.map(filename => {\n\treturn require(`../assets/${filename}`);\n});\n\nexport async function localFiles() {\n\tconst files = await Promise.all(URLS.map(url => fetch(url).then(r => r.blob())));\n\t// Manually convert Blob to File.\n\t(files as File[]).forEach((blob, i) => {\n\t\t// @ts-ignore\n\t\tblob.name = filenames[i];\n\t});\n\treturn files as File[];\n}","import React, { useEffect } from 'react';\nimport { Button } from '@blueprintjs/core';\nimport { useSetRecoilState, useRecoilValue } from 'recoil'; \nimport { sectionPositionState, sectionAxisState } from '../state/SectionState';\nimport { filenamesState, bufferedSelections } from '../state/DataState';\nimport * as io from '../io/io';\nimport { selectionBoundsState, selectionCenterState } from '../state/SelectionState';\nimport { makeBufferedTomSelectionFromFile } from '../io/BufferedTomSelection';\nimport { localFiles } from '../state/LocalFiles';\nimport { getExtension } from '../shared/utils';\nimport { makeBufferedBinSelectionFromFile } from '../io/BufferedBinSelection';\n// import { makeBufferedBinSelectionFromFile } from '../io/BufferedBinSelection';\n\nlocalFiles();\nlet localFilesLoaded = false;\n\nexport function FileHandler() {\n\n\tconst setSelectionBounds = useSetRecoilState(selectionBoundsState);\n\tconst setSectionPosition = useSetRecoilState(sectionPositionState);\n\tconst sectionAxis = useRecoilValue(sectionAxisState);\n\tconst setFilenames = useSetRecoilState(filenamesState);\n\n\tuseEffect(() => {\n\t\tasync function loadLocalFiles() {\n\t\t\tconst files = await localFiles();\n\t\t\tif (files.length) await parseFiles(files);\n\t\t}\n\t\tif (!localFilesLoaded) {\n\t\t\tloadLocalFiles();\n\t\t\tlocalFilesLoaded = true;\n\t\t}\n\t});\n\n\tasync function parseFiles(files: File[]) {\n\t\t// // Sort files by alphabetical order.\n\t\t// files.sort((a, b) => {\n\t\t// \tif (a < b) {\n\t\t// \t\treturn -1;\n\t\t// \t}\n\t\t// \tif (b < a) {\n\t\t// \t\treturn 1;\n\t\t// \t}\n\t\t// \treturn 0;\n\t\t// });\n\n\t\t// Delete any previously loaded files\n\t\tObject.keys(bufferedSelections).forEach(key => {\n\t\t\tbufferedSelections[key].dispose();\n\t\t\tdelete bufferedSelections[key];\n\t\t});\n\t\n\t\t// Load up all tom files.\n\t\tconst tomFileObjects = files.filter((file) => getExtension(file.name) === 'tom');\n\t\tconst bufferedTomSelections = await Promise.all(tomFileObjects.map((file) => makeBufferedTomSelectionFromFile(file)));\n\t\ttomFileObjects.forEach((file, i) => {\n\t\t\tbufferedSelections[file.name] = bufferedTomSelections[i];\n\t\t});\n\t\tObject.values(bufferedTomSelections).forEach(selection => selection.updateAtomDefaultsAfterDataLoaded());\n\n\t\t// // Load up all bin files.\n\t\t// const binFileObjects = files.filter((file) => getExtension(file.name) === 'bin');\n\t\t// const bufferedBinSelections = await Promise.all(binFileObjects.map((file) => makeBufferedBinSelectionFromFile(file)));\n\t\t// binFileObjects.forEach((file, i) => {\n\t\t// \tbufferedSelections[file.name] = bufferedBinSelections[i];\n\t\t// });\n\n\t\t// Set dimensions and filename.\n\t\tconst dimensions = (await io.getTomDimensions(tomFileObjects[0])).toArray();\n\t\tsetSelectionBounds({ min: [0, 0, 0], max: dimensions });\n\t\tsetSectionPosition(Math.floor(dimensions[sectionAxis] / 2));\n\n\t\t// Add new files to list of loaded files.\n\t\tsetFilenames(Object.keys(bufferedSelections));\n\t}\n\n\tasync function handleFileUpload(e: Event) {\n\t\tconst fileList = (e.target as HTMLInputElement).files;\n\t\tif (fileList === null) {\n\t\t\treturn;\n\t\t}\n\t\t// Convert FileList object to array.\n\t\tconst files = Array.from(fileList);\n\n\t\tawait parseFiles(files);\n\t}\n\n\tfunction openFileSelector() {\n\t\tconst input = document.getElementById(\"file-input\");\n\t\tif (!input) {\n\t\t\tthrow new Error('Missing file input element.');\n\t\t}\n\t\tinput.click();\n\t}\n\n\t// Bind change listener to file input - this is already in index.html.\n\tif (document) (document.getElementById('file-input') as HTMLInputElement).onchange = handleFileUpload;\n\n\treturn (\n\t\t<Button className=\"bp3-minimal\" icon=\"upload\" text=\"Upload Files\" onClick={openFileSelector} />\n\t);\n}\n\n\n\n// import Worker from './io.worker';\n\n// if (!window.Worker) {\n// \tthrow new Error('Web Workers not supported in this browser.');\n// }\n\n// const workers = [];\n// for (let i = 0; i<50; i++) {\n// \tconst worker = new Worker();\n// \tworker.postMessage({ i });\n// \tworkers.push(worker);\n// \t// @ts-ignore\n// \tworker.onmessage = event => console.log(event.data);\n// }","import React from 'react';\nimport {\n    Alignment,\n    Navbar,\n    NavbarDivider,\n    NavbarGroup,\n\tNavbarHeading,\n\tTab,\n\tTabs,\n} from '@blueprintjs/core';\nimport '../css/Nav.css';\nimport { TabState, currentTabState } from '../state/AppState';\nimport { useRecoilState } from 'recoil';\nimport { FileHandler } from './FileHandler';\n\nexport function Nav() {\n\n\tconst [tabState, setTabState] = useRecoilState(currentTabState);\n\n\treturn (\n\t\t<Navbar className={`Nav`}>\n\t\t\t<NavbarGroup align={Alignment.LEFT}>\n\t\t\t\t<NavbarHeading>Locked Letters</NavbarHeading>\n\t\t\t\t<NavbarDivider/>\n\t\t\t\t<Tabs\n\t\t\t\t\tanimate={true}\n\t\t\t\t\tlarge={true}\n\t\t\t\t\tonChange={(newTabId) => setTabState(newTabId as TabState)}\n\t\t\t\t\tselectedTabId={tabState}\n\t\t\t\t>\n\t\t\t\t\t<Tab id=\"3D\" title=\"3D\" />\n\t\t\t\t\t<Tab disabled id=\"2D\" title=\"2D\" />\n\t\t\t\t</Tabs>\n\t\t\t</NavbarGroup>\n\t\t\t<Navbar.Group align={Alignment.RIGHT}>\n\t\t\t\t<FileHandler/>\n\t\t\t</Navbar.Group>\n\t\t</Navbar>\n\t);\n}\n","import '../css/FileMenu.css';\nimport React, { useState } from 'react';\nimport { Collapse, Classes, Icon, H6, RadioGroup, Radio, Checkbox } from \"@blueprintjs/core\";\nimport { useRecoilValue, useRecoilState } from 'recoil';\n// @ts-ignore\nimport MiddleEllipsis from 'react-middle-ellipsis';\nimport { BufferedSelection, ColorMode, VisualStyleType } from '../shared/types';\nimport { binFilenamesState, bufferedSelections, scalarTomFilenamesState, vector1TomFilenamesState, vector3TomFilenamesState, vectorTomFilenamesState } from '../state/DataState';\nimport { visibleBinFilenamesState, visibleScalarTomFilenameState, visibleVectorTomFilenamesState } from '../state/AppState';\nimport { getExtension } from '../shared/utils';\nimport classNames from 'classnames';\n\ntype DataFileProps = {\n\tfilename: string,\n\tbufferedSelection: BufferedSelection,\n\tisExpanded: boolean,\n\texpandFile: (filename: string | null) => void,\n\tisVisible: boolean,\n\ttoggleVisiblity: () => void,\n}\n\nfunction DataFile(props: DataFileProps) {\n\tconst { type } = props.bufferedSelection;\n\tconst [ atom, setAtom ] = useRecoilState(props.bufferedSelection.getAtom());\n\tconst {\n\t\tvisualStyle, \n\t\tpointDataFilename,\n\t\tvectorDataFilename,\n\t\tvectorOffsetFilename,\n\t\tvectorScaleFilename,\n\t\tcolorMode,\n\t\tcolorHex,\n\t\tcolorZeroCentered,\n\t\tcolorDataFilename,\n\t} = atom;\n\tconst vector3Filenames = useRecoilValue(vector3TomFilenamesState);\n\tconst vector1Filenames = useRecoilValue(vector1TomFilenamesState);\n\tconst scalarFilenames = useRecoilValue(scalarTomFilenamesState);\n\n\tfunction updateVisualStyle(e: React.FormEvent<HTMLInputElement>) {\n\t\tconst _visualStyle = (e.target as HTMLInputElement).value;\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tvisualStyle: _visualStyle as VisualStyleType,\n\t\t});\n\t}\n\n\tfunction updatePointDataFilename(e: React.FormEvent<HTMLSelectElement>) {\n\t\tlet _pointDataFilename = (e.target as HTMLSelectElement).value as string | undefined;\n\t\tif (_pointDataFilename === 'undefined') {\n\t\t\t_pointDataFilename = undefined;\n\t\t}\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tpointDataFilename: _pointDataFilename,\n\t\t});\n\t}\n\n\tfunction updateVectorDataFilename(e: React.FormEvent<HTMLSelectElement>) {\n\t\tlet _vectorDataFilename = (e.target as HTMLSelectElement).value as string | undefined;\n\t\tif (_vectorDataFilename === 'undefined') {\n\t\t\t_vectorDataFilename = undefined;\n\t\t}\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tvectorDataFilename: _vectorDataFilename,\n\t\t});\n\t}\n\n\tfunction updateVectorOffsetFilename(e: React.FormEvent<HTMLSelectElement>) {\n\t\tlet _vectorOffsetFilename = (e.target as HTMLSelectElement).value as string | undefined;\n\t\tif (_vectorOffsetFilename === 'undefined') {\n\t\t\t_vectorOffsetFilename = undefined;\n\t\t}\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tvectorOffsetFilename: _vectorOffsetFilename,\n\t\t});\n\t}\n\n\tfunction updateVectorScaleFilename(e: React.FormEvent<HTMLSelectElement>) {\n\t\tlet _vectorScaleFilename = (e.target as HTMLSelectElement).value as string | undefined;\n\t\tif (_vectorScaleFilename === 'undefined') {\n\t\t\t_vectorScaleFilename = undefined;\n\t\t}\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tvectorScaleFilename: _vectorScaleFilename,\n\t\t});\n\t}\n\n\tfunction updateColorMode(e: React.FormEvent<HTMLInputElement>) {\n\t\tconst _colorMode = (e.target as HTMLInputElement).value;\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tcolorMode: _colorMode as ColorMode,\n\t\t});\n\t}\n\n\tfunction updateColorHex(e: React.FormEvent<HTMLInputElement>) {\n\t\tconst _colorHex = (e.target as HTMLInputElement).value;\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tcolorHex: _colorHex,\n\t\t});\n\t}\n\n\tfunction updateColorZeroCentered(e: React.FormEvent<HTMLInputElement>) {\n\t\tconst _colorZeroCentered = (e.target as HTMLInputElement).checked;\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tcolorZeroCentered: _colorZeroCentered,\n\t\t});\n\t}\n\n\tfunction updateColorDataFilename(e: React.FormEvent<HTMLSelectElement>) {\n\t\tconst _colorDataFilename = (e.target as HTMLSelectElement).value;\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t\tcolorDataFilename: _colorDataFilename,\n\t\t});\n\t}\n\n\tfunction showData() {\n\t\tsetAtom({\n\t\t\t...atom,\n\t\t});\n\t\tprops.toggleVisiblity();\n\t}\n\n\tfunction expandFile(e: any) {\n\t\te.stopPropagation();\n\t\tprops.expandFile(!props.isExpanded ? props.filename : null);\n\t\tif (!props.isExpanded && !props.isVisible) showData();\n\t}\n\n\tconst filenameLiClasses = classNames('FileMenu__FileName', Classes.MENU_ITEM, { expanded: props.isExpanded });\n\n\treturn (\n\t\t<>\n\t\t\t<li className={filenameLiClasses} onClick={showData}>\n\t\t\t\t<a href=\"# \" onClick={expandFile}>\n\t\t\t\t\t{ !props.isExpanded && <Icon icon=\"caret-right\"/> }\n\t\t\t\t\t{ props.isExpanded && <Icon icon=\"caret-down\"/> }\n\t\t\t\t</a>\n\t\t\t\t<MiddleEllipsis>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{props.filename}\n\t\t\t\t\t</span>\n\t\t\t\t</MiddleEllipsis>\n\t\t\t\t{ props.isVisible && <Icon className={Classes.ALIGN_RIGHT} icon=\"eye-open\"/> }\n\t\t\t</li>\n\t\t\t<Collapse isOpen={props.isExpanded} keepChildrenMounted={true}>\n\t\t\t\t<div className='FileMenu__FileOptions'>\n\t\t\t\t\t<H6>Properties</H6>\n\t\t\t\t\t<div>Data Type: <b>{type}</b></div>\n\t\t\t\t\t{ props.bufferedSelection.numElements === 1 && <div>Min: <b>{props.bufferedSelection.min.toString()}</b></div> }\n\t\t\t\t\t{ props.bufferedSelection.numElements === 1 && <div>Max: <b>{props.bufferedSelection.max.toString()}</b></div> }\n\t\t\t\t\t<br/>\n\t\t\t\t\t\n\t\t\t\t\t{ visualStyle !== 'scalarField' &&\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<H6>Visual Style</H6>\n\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\tonChange={updateVisualStyle}\n\t\t\t\t\t\t\t\tselectedValue={visualStyle}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Radio label=\"Point\" value=\"point\" />\n\t\t\t\t\t\t\t\t<Radio label=\"Vector\" value=\"vector\" />\n\t\t\t\t\t\t\t\t{ props.bufferedSelection.numElements > 3 && <Radio label=\"Mesh\" value=\"mesh\" /> }\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t{ visualStyle === 'point' &&\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label className=\"bp3-label .modifier\">\n\t\t\t\t\t\t\t\t\t\tPoint Position Data\n\t\t\t\t\t\t\t\t\t\t<div className=\"bp3-select .modifier\">\n\t\t\t\t\t\t\t\t\t\t\t<select value={pointDataFilename} onChange={updatePointDataFilename}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={'undefined'}>None</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvector3Filenames.map(filename => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={filename} value={filename}>{filename}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ visualStyle === 'vector' &&\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label className=\"bp3-label .modifier\">\n\t\t\t\t\t\t\t\t\t\tVector Direction\n\t\t\t\t\t\t\t\t\t\t<div className=\"bp3-select .modifier\">\n\t\t\t\t\t\t\t\t\t\t\t<select value={vectorDataFilename} onChange={updateVectorDataFilename}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={'undefined'}>None</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvector3Filenames.map(filename => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={filename} value={filename}>{filename}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label className=\"bp3-label .modifier\">\n\t\t\t\t\t\t\t\t\t\tVector Origin\n\t\t\t\t\t\t\t\t\t\t<div className=\"bp3-select .modifier\">\n\t\t\t\t\t\t\t\t\t\t\t<select value={vectorOffsetFilename} onChange={updateVectorOffsetFilename}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={'undefined'}>Use Voxel Center</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvector3Filenames.map(filename => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={filename} value={filename}>{filename}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label className=\"bp3-label .modifier\">\n\t\t\t\t\t\t\t\t\t\tVector Magnitude\n\t\t\t\t\t\t\t\t\t\t<div className=\"bp3-select .modifier\">\n\t\t\t\t\t\t\t\t\t\t\t<select value={vectorScaleFilename} onChange={updateVectorScaleFilename}>\n\t\t\t\t\t\t\t\t\t\t\t<option value={'undefined'}>Unit Scale</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvector1Filenames.map(filename => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={filename} value={filename}>{filename}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ visualStyle === 'mesh' &&\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label className=\"bp3-label .modifier\">\n\t\t\t\t\t\t\t\t\t\tVertex Data\n\t\t\t\t\t\t\t\t\t\t<div className=\"bp3-select .modifier\">\n\t\t\t\t\t\t\t\t\t\t\t<select value={pointDataFilename} onChange={updatePointDataFilename}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={'undefined'}>None</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvector3Filenames.map(filename => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={filename} value={filename}>{filename}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t<H6>Color</H6>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\tonChange={updateColorMode}\n\t\t\t\t\t\t\tselectedValue={colorMode}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{ visualStyle !== 'scalarField' &&\n\t\t\t\t\t\t\t<Radio label=\"Hex\" value='hex' />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Radio label=\"Spectrum\" value=\"spectral\" />\n\t\t\t\t\t\t<Radio label=\"Greyscale\" value=\"greyscale\" />\n\t\t\t\t\t\t{ visualStyle !== 'scalarField' && colorMode === 'hex' &&\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label className=\"bp3-label .modifier\">\n\t\t\t\t\t\t\t\t\tHex Color\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<input onKeyUp={updateColorHex} defaultValue={colorHex}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ colorMode !== 'hex' &&\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{ visualStyle !== 'scalarField' &&\n\t\t\t\t\t\t\t\t\t<label className=\"bp3-label .modifier\">\n\t\t\t\t\t\t\t\t\t\tData\n\t\t\t\t\t\t\t\t\t\t<div className=\"bp3-select .modifier\">\n\t\t\t\t\t\t\t\t\t\t\t<select value={colorDataFilename} onChange={updateColorDataFilename}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={'undefined'}>None</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvector1Filenames.map(filename => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={filename} value={filename}>{filename}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Checkbox checked={colorZeroCentered} label=\"Center colormap around 0\" onChange={updateColorZeroCentered} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</div>\n\t\t\t</Collapse>\n\t\t</>\n\t);\n};\n\ntype DataFileGroupProps = {\n\tfilenames: string[],\n\tvisibleFilenames: string[],\n\ttitle: string,\n\ttoggleVisiblity: (filename: string, isVisible: boolean) => void,\n}\n\nfunction DataFileGroup(props: DataFileGroupProps){\n\tconst [isExpanded, setIsExpanded] = useState(false);\n\tconst [currentExpandedFile, setCurrentExpandedFile] = useState<string | null>(null);\n\t\n\tfunction expandGroup() {\n\t\t// Don't expand if there are no files loaded.\n\t\tif (props.filenames.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsExpanded(!isExpanded);\n\t}\n\n\tfunction expandFile(filename: string | null) {\n\t\tsetCurrentExpandedFile(filename);\n\t}\n \n\treturn (\n\t\t<>\n\t\t\t<a href=\"# \" onClick={expandGroup}>\n\t\t\t\t<li className={`${Classes.MENU_ITEM} FileMenu__Title ${props.filenames.length === 0 ? Classes.DISABLED: ''}`}>\n\t\t\t\t\t{ props.title } ({props.filenames.length})\n\t\t\t\t\t{ !isExpanded && <Icon icon=\"caret-right\"/> }\n\t\t\t\t\t{ isExpanded && <Icon icon=\"caret-down\"/> }\n\t\t\t\t</li>\n\t\t\t</a>\n\t\t\t<Collapse isOpen={isExpanded} keepChildrenMounted={true}>\n\t\t\t\t{ props.filenames.map(filename => {\n\t\t\t\t\tconst isVisible = props.visibleFilenames.indexOf(filename) > -1;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<DataFile\n\t\t\t\t\t\t\tkey={filename} \n\t\t\t\t\t\t\tfilename={filename}\n\t\t\t\t\t\t\tbufferedSelection={bufferedSelections[filename]}\n\t\t\t\t\t\t\tisExpanded={filename === currentExpandedFile} \n\t\t\t\t\t\t\texpandFile={expandFile}\n\t\t\t\t\t\t\tisVisible={isVisible}\n\t\t\t\t\t\t\ttoggleVisiblity={() => props.toggleVisiblity(filename, isVisible)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}) }\n\t\t\t</Collapse>\n\t\t</>\n\t);\n}\n \nfunction ScalarTomFileGroup(){\n\tconst scalarTomFilenames = useRecoilValue(scalarTomFilenamesState);\n\tconst [visibleScalarTomFilename, setVisibleScalarTomFilename] = useRecoilState(visibleScalarTomFilenameState);\n\n\tfunction toggleVisiblity(filename: string, isVisible: boolean) {\n\t\tif (isVisible) {\n\t\t\tsetVisibleScalarTomFilename(null);\n\t\t} else {\t\n\t\t\tsetVisibleScalarTomFilename(filename);\n\t\t}\n\t}\n\n\treturn (\n\t\t<DataFileGroup\n\t\t\tfilenames={scalarTomFilenames}\n\t\t\tvisibleFilenames={visibleScalarTomFilename ? [visibleScalarTomFilename] : []}\n\t\t\ttitle=\"Scalar Fields\"\n\t\t\ttoggleVisiblity={toggleVisiblity}\n\t\t/>\n\t);\n}\n\nfunction VectorTomFileGroup(){\n\tconst vectorTomFilenames = useRecoilValue(vectorTomFilenamesState);\n\tconst [visibleVectorTomFilenames, setVisibleVectorTomFilenames] = useRecoilState(visibleVectorTomFilenamesState);\n\n\tfunction toggleVisiblity(filename: string, isVisible: boolean) {\n\t\tconst nextState = visibleVectorTomFilenames.slice();\n\t\tif (isVisible) {\n\t\t\tnextState.splice(nextState.indexOf(filename), 1);\n\t\t} else {\t\n\t\t\tnextState.push(filename);\n\t\t}\n\t\tsetVisibleVectorTomFilenames(nextState);\n\t}\n \n\treturn (\n\t\t<DataFileGroup\n\t\t\tfilenames={vectorTomFilenames}\n\t\t\tvisibleFilenames={visibleVectorTomFilenames}\n\t\t\ttitle=\"Vector Fields\"\n\t\t\ttoggleVisiblity={toggleVisiblity}\n\t\t/>\n\t);\n}\n\nfunction BinFileGroup(){\n\tconst binFilenames = useRecoilValue(binFilenamesState);\n\tconst [visibleBinFilenames, setVisibleBinFilenames] = useRecoilState(visibleBinFilenamesState);\n\n\tfunction toggleVisiblity(filename: string, isVisible: boolean) {\n\t\tconst nextState = visibleBinFilenames.slice();\n\t\tif (isVisible) {\n\t\t\tnextState.splice(nextState.indexOf(filename), 1);\n\t\t} else {\t\n\t\t\tnextState.push(filename);\n\t\t}\n\t\tsetVisibleBinFilenames(nextState);\n\t}\n \n\treturn (\n\t\t<DataFileGroup\n\t\t\tfilenames={binFilenames}\n\t\t\tvisibleFilenames={visibleBinFilenames}\n\t\t\ttitle=\"Other Data\"\n\t\t\ttoggleVisiblity={toggleVisiblity}\n\t\t/>\n\t);\n}\n\nexport function FileMenu() {\n\treturn (\n\t\t<ul className={`FileMenu pt-list-unstyled ${Classes.ELEVATION_0}`}>\n\t\t\t<ScalarTomFileGroup/>\n\t\t\t<VectorTomFileGroup/>\n\t\t\t<BinFileGroup/>\n\t\t</ul>\n\t);\n}","import React from 'react';\nimport { UnsignedByteType, DataTexture, BufferAttribute, RGBFormat } from 'three';\nimport { useRecoilValue } from 'recoil'; \nimport { sectionAxisState, sectionCenterState, sectionPositionState, sectionSizeState } from '../state/SectionState';\nimport { bufferedSelections } from '../state/DataState';\nimport { useUpdate } from 'react-three-fiber';\nimport { TypedArray } from '../shared/types';\nimport { BufferedTomScalarSelection } from '../io/BufferedTomSelection';\nimport { visibleScalarTomFilenameState } from '../state/AppState';\nimport { selectionCenterState } from '../state/SelectionState';\n\nconst position = new BufferAttribute(new Float32Array([\n\t-0.5, -0.5, 0.5,\n\t0.5, -0.5, 0.5,\n\t-0.5, 0.5, 0.5,\n\t0.5, 0.5, 0.5,\n\t-0.5, -0.5, -0.5,\n\t0.5, -0.5, -0.5,\n\t-0.5, 0.5, -0.5,\n\t0.5, 0.5, -0.5,\n]), 3);\n\nconst uv = new BufferAttribute(new Float32Array([\n\t0, 0,\n\t1, 0,\n\t0, 1,\n\t1, 1,\n\t0, 0,\n\t1, 0,\n\t0, 1,\n\t1, 1,\n]), 2);\n\nconst index = new BufferAttribute(new Uint32Array([\n\t0, 1, 2,\n\t2, 1, 3,\n\t4, 6, 5,\n\t5, 6, 7,\n\t0, 4, 1,\n\t1, 4, 5,\n\t1, 5, 3,\n\t3, 5, 7,\n\t3, 7, 2,\n\t2, 7, 6,\n\t2, 6, 0,\n\t0, 6, 4\n]), 1);\n\nfunction ScalarFieldSectionMesh() {\n\tconst selectionCenter = useRecoilValue(selectionCenterState);\n\tconst sectionSize = useRecoilValue(sectionSizeState);\n\tconst sectionCenter = useRecoilValue(sectionCenterState);\n\tconst sectionPosition = useRecoilValue(sectionPositionState);\n\tconst sectionAxis = useRecoilValue(sectionAxisState);\n\tconst visibleScalarDataFilename = useRecoilValue(visibleScalarTomFilenameState);\n\tconst bufferedTomSelection = bufferedSelections[visibleScalarDataFilename!] as BufferedTomScalarSelection;\n\tconst atom = useRecoilValue(bufferedTomSelection.getAtom());\n\n\tlet layerData: TypedArray | null = null;\n\tif (bufferedTomSelection) {\n\t\tlayerData = bufferedTomSelection.getLayerTexture(sectionAxis, sectionPosition, atom);\n\t};\n\n\tconst dataTexture = useUpdate<DataTexture>(\n\t\t(dataTexture) => {\n\t\t\tif (layerData) {\n\t\t\t\t// @ts-ignore;\n\t\t\t\tdataTexture.image.data = layerData;\n\t\t\t\tdataTexture.needsUpdate = true;\n\t\t\t}\n\t\t},\n\t\t[...Object.values(atom), sectionPosition, sectionAxis, layerData] // Execute only if these properties change,\n\t);\n\n\t// TODO: add rotation to section if not z aligned.\n\n\treturn (\n\t\t<mesh\n\t\t\tposition={[sectionCenter[0], sectionCenter[0], selectionCenter[2] + 0.5]}\n\t\t\tscale={sectionSize}>\n\t\t\t<bufferGeometry attach=\"geometry\" attributes-position={position} attributes-uv={uv} index={index} />\n\t\t\t<meshBasicMaterial depthWrite={false} attach=\"material\" >\n\t\t\t\t<dataTexture ref={dataTexture} attach='map' image-width={sectionSize[0]} image-height={sectionSize[1]} format={RGBFormat} type={UnsignedByteType}/>\n\t\t\t</meshBasicMaterial>\n\t\t</mesh>\n\t);\n}\n\nexport function ScalarFieldSection() {\n\tconst visibleScalarDataFilename = useRecoilValue(visibleScalarTomFilenameState);\n\tif (visibleScalarDataFilename === null) {\n\t\treturn (null)\n\t}\n\n\treturn (\n\t\t<ScalarFieldSectionMesh/>\n\t);\n}","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nexport const threeState = {\n\tcontrols: undefined as OrbitControls | undefined,\n};\n","import React, { useEffect } from 'react';\nimport { useRecoilValue } from 'recoil'; \nimport { extend, useThree, ReactThreeFiber, useUpdate } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { selectionCenterState } from '../state/SelectionState';\nimport { threeState } from '../state/ThreeState';\n\n// Add OrbitControls to react-three-fiber.\nextend({ OrbitControls });\n// Add type to JSX namespace.\ndeclare global {\n\tnamespace JSX {\n\t\tinterface IntrinsicElements {\n\t\t'orbitControls': ReactThreeFiber.Object3DNode<OrbitControls, typeof OrbitControls>;\n\t\t}\n\t}\n}\n\nexport interface ControlsProps {\n}\n\nexport function Controls(props: ControlsProps) {\n\n\tconst selectionCenter = useRecoilValue(selectionCenterState);\n\n\t// Get a reference to the Three.js Camera, and the canvas html element.\n\tconst {\n\t\tcamera,\n\t\tgl: { domElement },\n\t\tinvalidate,\n\t} = useThree();\n\n\t// Ref to the controls, so that we can update them on every frame using useFrame\n\tconst controls = useUpdate<OrbitControls>(\n\t\t(controls: OrbitControls) => {\n\t\t\tcontrols.update();\n\t\t},\n\t\t[selectionCenter] // Execute only if these properties change,\n\t)\n\n\tuseEffect(() => {\n\t\tif (controls && controls.current !== null) {\n\t\t\tthreeState.controls = controls.current;\n\t\t\tcontrols.current!.addEventListener(\"change\", invalidate);\n\t\t\tconst cancel = () =>\n\t\t\tcontrols.current!.removeEventListener(\"change\", invalidate);\n\t\t\treturn cancel;\n\t\t}\n\t\treturn () => null;\n\t}, [controls, invalidate]);\n\n\treturn (\n\t\t<orbitControls\n\t\t\tref={controls}\n\t\t\targs={[camera, domElement]} \n\t\t\ttarget-x={selectionCenter[0]}\n\t\t\ttarget-y={selectionCenter[1]}\n\t\t\ttarget-z={selectionCenter[2]}\n\t\t\tzoomSpeed={1}\n\t\t\trotateSpeed={1}\n\t\t\t// enablePan={false}\n\t\t/>\n\t);\n  };","import React from 'react';\nimport { BufferAttribute } from 'three';\nimport { useRecoilValue } from 'recoil'; \nimport { sectionAxisState, sectionCenterState, sectionPositionState } from '../state/SectionState';\nimport { useUpdate } from 'react-three-fiber';\nimport { BufferedTomVectorSelection } from '../io/BufferedTomSelection';\nimport { bufferedSelections } from '../state/DataState';\nimport { visibleVectorTomFilenamesState } from '../state/AppState';\nimport { selectionCenterState } from '../state/SelectionState';\n\nexport interface VectorFieldSectionProps {\n\tbufferedTomSelection: BufferedTomVectorSelection;\n}\n\nexport function VectorFieldSection(props: VectorFieldSectionProps) {\n\tconst sectionPosition = useRecoilValue(sectionPositionState);\n\tconst sectionAxis = useRecoilValue(sectionAxisState);\n\tconst atom = useRecoilValue(props.bufferedTomSelection.getAtom());\n\tconst sectionCenter = useRecoilValue(sectionCenterState);\n\tconst selectionCenter = useRecoilValue(selectionCenterState);\n\n\tconst { positions, count, vertexColors } = props.bufferedTomSelection.getLayerPositions(sectionAxis, sectionPosition, atom);\n\tconst { visualStyle } = atom;\n\n\tconst positionAttribute = useUpdate<BufferAttribute>(\n\t\t(positionAttribute) => {\n\t\t\t// @ts-ignore;\n\t\t\tpositionAttribute.needsUpdate = true;\n\t\t},\n\t\t[...Object.values(atom), sectionPosition, sectionAxis, positions] // Execute only if these properties change,\n\t);\n\n\tconst colorAttribute = useUpdate<BufferAttribute>(\n\t\t(colorAttribute) => {\n\t\t\t// @ts-ignore;\n\t\t\tcolorAttribute.needsUpdate = true;\n\t\t},\n\t\t[...Object.values(atom), sectionPosition, sectionAxis, vertexColors] // Execute only if these properties change,\n\t);\n\n\t// TODO: add rotation to section if not z aligned.\n\n\treturn (\n\t\t<>\n\t\t{ visualStyle === 'vector' &&\n\t\t\t<lineSegments position={[0, 0, -sectionCenter[2] + selectionCenter[2]]}>\n\t\t\t\t<bufferGeometry attach=\"geometry\">\n\t\t\t\t\t<bufferAttribute ref={positionAttribute} attachObject={[\"attributes\", \"position\"]} array={positions} count={count} itemSize={3}/>\n\t\t\t\t\t<bufferAttribute ref={colorAttribute} attachObject={[\"attributes\", \"color\"]} array={vertexColors} count={count} itemSize={3}/>\n\t\t\t\t</bufferGeometry>\n\t\t\t\t<lineBasicMaterial attach=\"material\" vertexColors={true} depthTest={false}/>\n\t\t\t</lineSegments>\n\t\t}\n\t\t{ visualStyle === 'point' &&\n\t\t\t<points position={[0, 0, -sectionCenter[2] + selectionCenter[2]]}>\n\t\t\t\t<bufferGeometry  attach=\"geometry\">\n\t\t\t\t\t<bufferAttribute ref={positionAttribute} attachObject={[\"attributes\", \"position\"]} array={positions} count={count} itemSize={3}/>\n\t\t\t\t\t<bufferAttribute ref={colorAttribute} attachObject={[\"attributes\", \"color\"]} array={vertexColors} count={count} itemSize={3}/>\n\t\t\t\t</bufferGeometry>\n\t\t\t\t<pointsMaterial size={4} attach=\"material\" vertexColors={true} depthTest={false}/>\n\t\t\t</points>\n\t\t}\n\t\t</>\n\t);\n}\n\nexport function VectorFieldSections() {\n\tconst r_visibleVector3DDataFilenames = useRecoilValue(visibleVectorTomFilenamesState);\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tr_visibleVector3DDataFilenames.map(filename => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<VectorFieldSection key={filename} bufferedTomSelection={bufferedSelections[filename] as BufferedTomVectorSelection}/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</>\n\t);\n}","import React, { } from 'react';\nimport { BufferAttribute } from 'three';\nimport { useRecoilValue } from 'recoil'; \nimport { useUpdate } from 'react-three-fiber';\nimport { bufferedSelections } from '../state/DataState';\nimport { BufferedBinSelection } from '../io/BufferedBinSelection';\nimport { visibleBinFilenamesState } from '../state/AppState';\n\nexport interface BinSectionProps {\n\tbufferedBinSelection: BufferedBinSelection;\n}\n\nfunction BinSection(props: BinSectionProps) {\n\tconst atom = useRecoilValue(props.bufferedBinSelection.getAtom());\n\n\tconst { positions, count, edges, edgeCount, vertexColors } = props.bufferedBinSelection.getLayerPositions(atom);\n\tconst { visualStyle } = atom;\n\n\tconst positionAttribute = useUpdate<BufferAttribute>(\n\t\t(positionAttribute) => {\n\t\t\t// @ts-ignore;\n\t\t\tpositionAttribute.needsUpdate = true;\n\t\t},\n\t\t[...Object.values(atom), positions] // Execute only if these properties change,\n\t);\n\tconst indexAttribute = useUpdate<BufferAttribute>(\n\t\t(indexAttribute) => {\n\t\t\t// @ts-ignore;\n\t\t\tindexAttribute.needsUpdate = true;\n\t\t},\n\t\t[...Object.values(atom), edges] // Execute only if these properties change,\n\t);\n\tconst colorAttribute = useUpdate<BufferAttribute>(\n\t\t(colorAttribute) => {\n\t\t\t// @ts-ignore;\n\t\t\tcolorAttribute.needsUpdate = true;\n\t\t},\n\t\t[...Object.values(atom), vertexColors] // Execute only if these properties change,\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ (visualStyle === 'vector' || visualStyle === 'mesh') &&\n\t\t\t\t<lineSegments>\n\t\t\t\t\t<bufferGeometry  attach=\"geometry\">\n\t\t\t\t\t\t<bufferAttribute ref={positionAttribute} attachObject={[\"attributes\", \"position\"]} array={positions} count={count} itemSize={3}/>\n\t\t\t\t\t\t{ visualStyle === 'mesh' &&\n\t\t\t\t\t\t\t<bufferAttribute ref={indexAttribute} attach={\"index\"} array={edges} count={edgeCount} itemSize={1}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<bufferAttribute ref={colorAttribute} attachObject={[\"attributes\", \"color\"]} array={vertexColors} count={count} itemSize={3}/>\n\t\t\t\t\t</bufferGeometry>\n\t\t\t\t\t<lineBasicMaterial attach=\"material\" vertexColors={true}/>\n\t\t\t\t</lineSegments>\n\t\t\t}\n\t\t\t{ visualStyle === 'point' &&\n\t\t\t\t<points>\n\t\t\t\t\t<bufferGeometry  attach=\"geometry\">\n\t\t\t\t\t\t<bufferAttribute ref={positionAttribute} attachObject={[\"attributes\", \"position\"]} array={positions} count={count} itemSize={3}/>\n\t\t\t\t\t\t<bufferAttribute ref={colorAttribute} attachObject={[\"attributes\", \"color\"]} array={vertexColors} count={count} itemSize={3}/>\n\t\t\t\t\t</bufferGeometry>\n\t\t\t\t\t<pointsMaterial size={4} attach=\"material\" vertexColors={true}/>\n\t\t\t\t</points>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport function BinSections() {\n\tconst r_visibleBinFilenames = useRecoilValue(visibleBinFilenamesState);\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tr_visibleBinFilenames.map(filename => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BinSection key={filename} bufferedBinSelection={bufferedSelections[filename] as BufferedBinSelection}/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</>\n\t);\n}","import '../css/View3D.css';\nimport React, { useContext } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { ScalarFieldSection } from './ScalarFieldSection';\nimport { Controls } from './Controls';\n// @ts-ignore\nimport { AppContext } from 'recoil';\nimport { VectorFieldSections } from './VectorFieldSection';\nimport { BinSections } from './BinSelection';\n\nexport const View3D = () => {\n\t// We have to forward the context from Recoil to React-Three-Fiber.\n\tconst value = useContext(AppContext);\n\treturn (\n\t\t<div className='View3D'>\n\t\t\t<Canvas\n\t\t\t\tcolorManagement\n\t\t\t\torthographic\n\t\t\t\tcamera={{ zoom: 5, up: [0, 0, 1], near: 0.0001, far: 1000, position: [100, 100, 100] }}\n\t\t\t\tpixelRatio={window.devicePixelRatio}\n\t\t\t\tinvalidateFrameloop>\n\t\t\t\t<AppContext.Provider value={value}>\n\t\t\t\t\t<ambientLight />\n\t\t\t\t\t<pointLight position={[10, 10, 10]} />\n\t\t\t\t\t<ScalarFieldSection />\n\t\t\t\t\t<VectorFieldSections />\n\t\t\t\t\t<BinSections /> \n\t\t\t\t\t<Controls />\n\t\t\t\t</AppContext.Provider>\n\t\t\t</Canvas>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport { Slider } from '@blueprintjs/core';\nimport { useRecoilState, useRecoilValue } from 'recoil'; \nimport { sectionAxisState, sectionPositionState } from '../state/SectionState';\nimport '../css/ControlPanel.css';\nimport { selectionBoundsState, selectionSizeState } from '../state/SelectionState';\n\nexport function ControlPanel() {\n\n\tconst [sectionPosition, setCrossSectionPosition] = useRecoilState(sectionPositionState);\n\tconst sectionAxis = useRecoilValue(sectionAxisState);\n\tconst selectionBounds = useRecoilValue(selectionBoundsState);\n\tconst selectionSize = useRecoilValue(selectionSizeState);\n\n\treturn (\n\t\t<div className='ControlPanel'>\n\t\t\t{ selectionSize[sectionAxis] > 0 &&  <Slider\n\t\t\t\tmin={selectionBounds.min[sectionAxis]}\n\t\t\t\tmax={selectionBounds.max[sectionAxis] - 1}\n\t\t\t\tstepSize={1}\n\t\t\t\tlabelStepSize={10}\n\t\t\t\tonChange={setCrossSectionPosition}\n\t\t\t\tvalue={sectionPosition}\n\t\t\t\tvertical\n\t\t\t\tshowTrackFill={false}\n\t\t\t/> }\n\t\t</div>\n\t);\n}","import React from 'react';\nimport { Button } from '@blueprintjs/core';\nimport { useSetRecoilState } from 'recoil'; \nimport '../css/OrbitControls.css';\nimport { threeState } from '../state/ThreeState';\n\nexport function OrbitControls() {\n\n\tfunction resetControls() {\n\t\tthreeState.controls?.reset();\n\t}\n\n\treturn (\n\t\t<div className='OrbitControls'>\n\t\t\t<Button className=\"bp3-minimal\" text=\"Reset 3D View\" onClick={resetControls} />\n\t\t</div>\n\t);\n}","import React from 'react';\nimport '../css/App.css';\nimport { Nav } from './Nav';\nimport '../css/Blueprint.css';\nimport { FocusStyleManager } from \"@blueprintjs/core\";\nimport { FileMenu } from './FileMenu';\nimport { View3D } from '../3D/View3D';\n// @ts-ignore\nimport { RecoilRoot } from 'recoil';\nimport { ControlPanel } from './ControlPanel';\nimport { OrbitControls } from './OrbitControls';\n\n// Focus style manager is needed to prevent intrusive focus artifacts.\n// https://blueprintjs.com/docs/#core/accessibility.focus-management\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfunction App() {\n  return (\n\t<div className=\"App\">\n\t\t<RecoilRoot>\n\t\t\t<Nav/>\n\t\t\t<div className='App__Content'> \n\t\t\t\t<FileMenu/>\n\t\t\t\t<View3D/>\n\t\t\t\t<ControlPanel/>\n\t\t\t\t<OrbitControls/>\n\t\t\t</div>\n\t\t</RecoilRoot>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './UI/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}